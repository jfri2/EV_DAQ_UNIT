
EV_DAQ_Unit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000018a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800100  00800100  000001fe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000230  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000270  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000003ae  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000021c  00000000  00000000  00000666  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001a3  00000000  00000000  00000882  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000074  00000000  00000000  00000a28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000229  00000000  00000000  00000a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000056  00000000  00000000  00000cc5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00000d1b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__vector_11>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	ea e8       	ldi	r30, 0x8A	; 138
  c8:	f1 e0       	ldi	r31, 0x01	; 1
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a0 30       	cpi	r26, 0x00	; 0
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a0 e0       	ldi	r26, 0x00	; 0
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a7 30       	cpi	r26, 0x07	; 7
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 79 00 	call	0xf2	; 0xf2 <main>
  ea:	0c 94 c3 00 	jmp	0x186	; 0x186 <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <main>:
    while (1) {
        // TODO:
//         printf("\nHello World");
//         scanf("%d",&test);
//         printf("");
    }
  f2:	ff cf       	rjmp	.-2      	; 0xf2 <main>

000000f4 <__vector_11>:
uint8_t systck_s = 0;
uint8_t systck_m = 0;
uint8_t systck_h = 0;
uint16_t systck_d = 0;

ISR(TIMER1_COMPA_vect) {
  f4:	1f 92       	push	r1
  f6:	0f 92       	push	r0
  f8:	0f b6       	in	r0, 0x3f	; 63
  fa:	0f 92       	push	r0
  fc:	11 24       	eor	r1, r1
  fe:	2f 93       	push	r18
 100:	8f 93       	push	r24
 102:	9f 93       	push	r25
    /* Increment systck global vars to keep system time */
    systck_ms++;
 104:	80 91 05 01 	lds	r24, 0x0105
 108:	90 91 06 01 	lds	r25, 0x0106
 10c:	01 96       	adiw	r24, 0x01	; 1
    if(systck_ms >= 1000) {
 10e:	88 3e       	cpi	r24, 0xE8	; 232
 110:	23 e0       	ldi	r18, 0x03	; 3
 112:	92 07       	cpc	r25, r18
 114:	28 f4       	brcc	.+10     	; 0x120 <__vector_11+0x2c>
uint8_t systck_h = 0;
uint16_t systck_d = 0;

ISR(TIMER1_COMPA_vect) {
    /* Increment systck global vars to keep system time */
    systck_ms++;
 116:	90 93 06 01 	sts	0x0106, r25
 11a:	80 93 05 01 	sts	0x0105, r24
 11e:	2b c0       	rjmp	.+86     	; 0x176 <__vector_11+0x82>
    if(systck_ms >= 1000) {
        systck_ms = 0;
 120:	10 92 06 01 	sts	0x0106, r1
 124:	10 92 05 01 	sts	0x0105, r1
        systck_s++;
 128:	80 91 04 01 	lds	r24, 0x0104
 12c:	8f 5f       	subi	r24, 0xFF	; 255
        if(systck_s >= 60) {
 12e:	8c 33       	cpi	r24, 0x3C	; 60
 130:	18 f4       	brcc	.+6      	; 0x138 <__vector_11+0x44>
ISR(TIMER1_COMPA_vect) {
    /* Increment systck global vars to keep system time */
    systck_ms++;
    if(systck_ms >= 1000) {
        systck_ms = 0;
        systck_s++;
 132:	80 93 04 01 	sts	0x0104, r24
 136:	1f c0       	rjmp	.+62     	; 0x176 <__vector_11+0x82>
        if(systck_s >= 60) {
            systck_s = 0;
 138:	10 92 04 01 	sts	0x0104, r1
            systck_m++;
 13c:	80 91 03 01 	lds	r24, 0x0103
 140:	8f 5f       	subi	r24, 0xFF	; 255
            if(systck_m >= 60) {
 142:	8c 33       	cpi	r24, 0x3C	; 60
 144:	18 f4       	brcc	.+6      	; 0x14c <__vector_11+0x58>
    if(systck_ms >= 1000) {
        systck_ms = 0;
        systck_s++;
        if(systck_s >= 60) {
            systck_s = 0;
            systck_m++;
 146:	80 93 03 01 	sts	0x0103, r24
 14a:	15 c0       	rjmp	.+42     	; 0x176 <__vector_11+0x82>
            if(systck_m >= 60) {
                systck_m = 0;
 14c:	10 92 03 01 	sts	0x0103, r1
                systck_h++;
 150:	80 91 02 01 	lds	r24, 0x0102
 154:	8f 5f       	subi	r24, 0xFF	; 255
                if(systck_h >= 24) {
 156:	88 31       	cpi	r24, 0x18	; 24
 158:	18 f4       	brcc	.+6      	; 0x160 <__vector_11+0x6c>
        if(systck_s >= 60) {
            systck_s = 0;
            systck_m++;
            if(systck_m >= 60) {
                systck_m = 0;
                systck_h++;
 15a:	80 93 02 01 	sts	0x0102, r24
 15e:	0b c0       	rjmp	.+22     	; 0x176 <__vector_11+0x82>
                if(systck_h >= 24) {
                    systck_h = 0;
 160:	10 92 02 01 	sts	0x0102, r1
                    systck_d++;                    
 164:	80 91 00 01 	lds	r24, 0x0100
 168:	90 91 01 01 	lds	r25, 0x0101
 16c:	01 96       	adiw	r24, 0x01	; 1
 16e:	90 93 01 01 	sts	0x0101, r25
 172:	80 93 00 01 	sts	0x0100, r24
                }
            }
        }        
    }
}
 176:	9f 91       	pop	r25
 178:	8f 91       	pop	r24
 17a:	2f 91       	pop	r18
 17c:	0f 90       	pop	r0
 17e:	0f be       	out	0x3f, r0	; 63
 180:	0f 90       	pop	r0
 182:	1f 90       	pop	r1
 184:	18 95       	reti

00000186 <_exit>:
 186:	f8 94       	cli

00000188 <__stop_program>:
 188:	ff cf       	rjmp	.-2      	; 0x188 <__stop_program>
