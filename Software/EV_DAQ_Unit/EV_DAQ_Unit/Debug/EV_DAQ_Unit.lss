
EV_DAQ_Unit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000118  00800100  0000099c  00000a30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000099c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  00800218  00800218  00000b48  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b48  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ba4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000be4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000094f  00000000  00000000  00000cec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000004e6  00000000  00000000  0000163b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004c7  00000000  00000000  00001b21  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a4  00000000  00000000  00001fe8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003b6  00000000  00000000  0000228c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009fe  00000000  00000000  00002642  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00003040  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 4a 01 	jmp	0x294	; 0x294 <__vector_11>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	12 e0       	ldi	r17, 0x02	; 2
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	ec e9       	ldi	r30, 0x9C	; 156
  c8:	f9 e0       	ldi	r31, 0x09	; 9
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a8 31       	cpi	r26, 0x18	; 24
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	22 e0       	ldi	r18, 0x02	; 2
  d8:	a8 e1       	ldi	r26, 0x18	; 24
  da:	b2 e0       	ldi	r27, 0x02	; 2
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a5 32       	cpi	r26, 0x25	; 37
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 95 00 	call	0x12a	; 0x12a <main>
  ea:	0c 94 cc 04 	jmp	0x998	; 0x998 <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <adc_init>:
* @param[in] adc_dig_disable  Digital input disable mask. ADC7=Bit7, ADC0=Bit0
* @param[in] adc_div          ADC prescalar (clock divider)
* @return void
*/
void adc_init(uint8_t adc_dig_disable, uint8_t adc_div) {
    DIDR0 = adc_dig_disable;    // Disable digital input buffer (saves power and causes PIN to always read 0)
  f2:	80 93 7e 00 	sts	0x007E, r24
  f6:	68 30       	cpi	r22, 0x08	; 8
  f8:	08 f0       	brcs	.+2      	; 0xfc <adc_init+0xa>
  fa:	67 e0       	ldi	r22, 0x07	; 7
    if(adc_div > ADC_DIV_128) {
        adc_div = ADC_DIV_128;    // Handle invalid prescalars by forcing to 128 division 
    }   
         
    ADCSRA = ((1<<ADEN) | (adc_div));   // Enable ADC and set proper prescale
  fc:	60 68       	ori	r22, 0x80	; 128
  fe:	60 93 7a 00 	sts	0x007A, r22
 102:	08 95       	ret

00000104 <i2c1_init>:
* @param[in] cpu_freq   CPU frequency (usually F_CPU) in Hz
* @param[in] i2c_freq   desired I2C frequency in Hz
* @return uint8_t   Division factor
*/
uint8_t i2c_calc_br_div(uint32_t cpu_freq, uint32_t i2c_freq) {
    return((uint8_t)(((cpu_freq/i2c_freq) - 16)>>1));
 104:	0e 94 af 01 	call	0x35e	; 0x35e <__udivmodsi4>
 108:	da 01       	movw	r26, r20
 10a:	c9 01       	movw	r24, r18
 10c:	40 97       	sbiw	r24, 0x10	; 16
 10e:	a1 09       	sbc	r26, r1
 110:	b1 09       	sbc	r27, r1
 112:	b6 95       	lsr	r27
 114:	a7 95       	ror	r26
 116:	97 95       	ror	r25
 118:	87 95       	ror	r24
* @param[in] cpu_freq   CPU frequency (usually F_CPU) in Hz
* @param[in] i2c_freq   desired I2C frequency in Hz
* @return void
*/
void i2c1_init(uint32_t cpu_freq, uint32_t i2c_freq) {
    TWBR1 = i2c_calc_br_div(cpu_freq, i2c_freq);   // Set I2C SCL to correct value
 11a:	80 93 d8 00 	sts	0x00D8, r24
    TWCR1 |= (1<<TWIE); // Enable TWI interrupt
 11e:	ec ed       	ldi	r30, 0xDC	; 220
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	81 60       	ori	r24, 0x01	; 1
 126:	80 83       	st	Z, r24
 128:	08 95       	ret

0000012a <main>:
                                printf("\n==============================================\n")
                                
#define PRINT_SYSTIME() printf("\n%d %02d:%02d:%02d:%03d ", systck_d, systck_h, systck_m, systck_s, systck_ms);

int main(void) {
    uart0_init(F_CPU, UART_BAUD);
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	32 ec       	ldi	r19, 0xC2	; 194
 12e:	41 e0       	ldi	r20, 0x01	; 1
 130:	50 e0       	ldi	r21, 0x00	; 0
 132:	60 e0       	ldi	r22, 0x00	; 0
 134:	74 e2       	ldi	r23, 0x24	; 36
 136:	84 ef       	ldi	r24, 0xF4	; 244
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	0e 94 06 01 	call	0x20c	; 0x20c <uart0_init>
    uart0_stdio_assign();
 13e:	0e 94 2a 01 	call	0x254	; 0x254 <uart0_stdio_assign>
    i2c1_init(F_CPU, I2C_SCL_FREQ);
 142:	20 ea       	ldi	r18, 0xA0	; 160
 144:	36 e8       	ldi	r19, 0x86	; 134
 146:	41 e0       	ldi	r20, 0x01	; 1
 148:	50 e0       	ldi	r21, 0x00	; 0
 14a:	60 e0       	ldi	r22, 0x00	; 0
 14c:	74 e2       	ldi	r23, 0x24	; 36
 14e:	84 ef       	ldi	r24, 0xF4	; 244
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	0e 94 82 00 	call	0x104	; 0x104 <i2c1_init>
    adc_init((ADC_DIG_DIS_LC | ADC_DIG_DIS_HE), ADC_DIV_128);
 156:	67 e0       	ldi	r22, 0x07	; 7
 158:	87 ec       	ldi	r24, 0xC7	; 199
 15a:	0e 94 79 00 	call	0xf2	; 0xf2 <adc_init>
    timer1_1ms_init();
 15e:	0e 94 93 01 	call	0x326	; 0x326 <timer1_1ms_init>
    PRINT_PROJECT_HEADER();
 162:	8e e0       	ldi	r24, 0x0E	; 14
 164:	91 e0       	ldi	r25, 0x01	; 1
 166:	9f 93       	push	r25
 168:	8f 93       	push	r24
 16a:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <printf>
 16e:	8e e3       	ldi	r24, 0x3E	; 62
 170:	91 e0       	ldi	r25, 0x01	; 1
 172:	9f 93       	push	r25
 174:	8f 93       	push	r24
 176:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <printf>
 17a:	ce e6       	ldi	r28, 0x6E	; 110
 17c:	d1 e0       	ldi	r29, 0x01	; 1
 17e:	df 93       	push	r29
 180:	cf 93       	push	r28
 182:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <printf>
 186:	8e e9       	ldi	r24, 0x9E	; 158
 188:	91 e0       	ldi	r25, 0x01	; 1
 18a:	9f 93       	push	r25
 18c:	8f 93       	push	r24
 18e:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <printf>
 192:	df 93       	push	r29
 194:	cf 93       	push	r28
 196:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <printf>
 19a:	8e ec       	ldi	r24, 0xCE	; 206
 19c:	91 e0       	ldi	r25, 0x01	; 1
 19e:	9f 93       	push	r25
 1a0:	8f 93       	push	r24
 1a2:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <printf>
 1a6:	8e e0       	ldi	r24, 0x0E	; 14
 1a8:	91 e0       	ldi	r25, 0x01	; 1
 1aa:	0e 94 e7 01 	call	0x3ce	; 0x3ce <puts>
 1ae:	8d b7       	in	r24, 0x3d	; 61
 1b0:	9e b7       	in	r25, 0x3e	; 62
 1b2:	0c 96       	adiw	r24, 0x0c	; 12
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	f8 94       	cli
 1b8:	9e bf       	out	0x3e, r25	; 62
 1ba:	0f be       	out	0x3f, r0	; 63
 1bc:	8d bf       	out	0x3d, r24	; 61
    while (1) {
        PRINT_SYSTIME();
 1be:	ce ef       	ldi	r28, 0xFE	; 254
 1c0:	d1 e0       	ldi	r29, 0x01	; 1
 1c2:	80 91 1e 02 	lds	r24, 0x021E
 1c6:	8f 93       	push	r24
 1c8:	80 91 1d 02 	lds	r24, 0x021D
 1cc:	8f 93       	push	r24
 1ce:	80 91 1c 02 	lds	r24, 0x021C
 1d2:	1f 92       	push	r1
 1d4:	8f 93       	push	r24
 1d6:	80 91 1b 02 	lds	r24, 0x021B
 1da:	1f 92       	push	r1
 1dc:	8f 93       	push	r24
 1de:	80 91 1a 02 	lds	r24, 0x021A
 1e2:	1f 92       	push	r1
 1e4:	8f 93       	push	r24
 1e6:	80 91 19 02 	lds	r24, 0x0219
 1ea:	8f 93       	push	r24
 1ec:	80 91 18 02 	lds	r24, 0x0218
 1f0:	8f 93       	push	r24
 1f2:	df 93       	push	r29
 1f4:	cf 93       	push	r28
 1f6:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <printf>
    }
 1fa:	8d b7       	in	r24, 0x3d	; 61
 1fc:	9e b7       	in	r25, 0x3e	; 62
 1fe:	0c 96       	adiw	r24, 0x0c	; 12
 200:	0f b6       	in	r0, 0x3f	; 63
 202:	f8 94       	cli
 204:	9e bf       	out	0x3e, r25	; 62
 206:	0f be       	out	0x3f, r0	; 63
 208:	8d bf       	out	0x3d, r24	; 61
 20a:	db cf       	rjmp	.-74     	; 0x1c2 <main+0x98>

0000020c <uart0_init>:
* @return void
*/
void uart0_init(uint32_t cpu_freq, uint32_t uart_baud) {    
    // Set UART0 to no parity, 8 data bits, 1 stop bit
    // Enable Tx & Rx UART
    UCSR0A = 0x00;
 20c:	10 92 c0 00 	sts	0x00C0, r1
    UCSR0B = 0x18;
 210:	e8 e1       	ldi	r30, 0x18	; 24
 212:	e0 93 c1 00 	sts	0x00C1, r30
    UCSR0C = 0x06;
 216:	e6 e0       	ldi	r30, 0x06	; 6
 218:	e0 93 c2 00 	sts	0x00C2, r30
    
    // Set UART0 Baud Rate
    UBRR0H = (((cpu_freq/uart_baud)/32)-1)>>8;  // Set baud rate div (upper register)
 21c:	0e 94 af 01 	call	0x35e	; 0x35e <__udivmodsi4>
 220:	ba 01       	movw	r22, r20
 222:	a9 01       	movw	r20, r18
 224:	68 94       	set
 226:	14 f8       	bld	r1, 4
 228:	76 95       	lsr	r23
 22a:	67 95       	ror	r22
 22c:	57 95       	ror	r21
 22e:	47 95       	ror	r20
 230:	16 94       	lsr	r1
 232:	d1 f7       	brne	.-12     	; 0x228 <uart0_init+0x1c>
 234:	db 01       	movw	r26, r22
 236:	ca 01       	movw	r24, r20
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	a1 09       	sbc	r26, r1
 23c:	b1 09       	sbc	r27, r1
 23e:	89 2f       	mov	r24, r25
 240:	9a 2f       	mov	r25, r26
 242:	ab 2f       	mov	r26, r27
 244:	bb 27       	eor	r27, r27
 246:	80 93 c5 00 	sts	0x00C5, r24
    UBRR0L = (((cpu_freq/uart_baud)/32)-1);     // Set baud rate div (lower register)   
 24a:	2f ef       	ldi	r18, 0xFF	; 255
 24c:	24 0f       	add	r18, r20
 24e:	20 93 c4 00 	sts	0x00C4, r18
 252:	08 95       	ret

00000254 <uart0_stdio_assign>:
* @return void
*/
void uart0_stdio_assign(void) {
    // Assign STDIO Streams
    static FILE uart_stdio = FDEV_SETUP_STREAM(uart0_stdio_put, uart0_stdio_get, _FDEV_SETUP_RW);
    stdout = &uart_stdio;   // Define output stream
 254:	ef e1       	ldi	r30, 0x1F	; 31
 256:	f2 e0       	ldi	r31, 0x02	; 2
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	91 e0       	ldi	r25, 0x01	; 1
 25c:	93 83       	std	Z+3, r25	; 0x03
 25e:	82 83       	std	Z+2, r24	; 0x02
    stdin = &uart_stdio;    // Define input stream
 260:	91 83       	std	Z+1, r25	; 0x01
 262:	80 83       	st	Z, r24
 264:	08 95       	ret

00000266 <uart0_put>:
* @brief Write byte over UART0
* @param[in] uint8_t ch     Byte to write
* @return void
*/
void uart0_put(uint8_t ch) {
    while((UCSR0A & (1<<UDRE0)) == 0x00);    // Wait until tx buffer is empty
 266:	e0 ec       	ldi	r30, 0xC0	; 192
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	90 81       	ld	r25, Z
 26c:	95 ff       	sbrs	r25, 5
 26e:	fd cf       	rjmp	.-6      	; 0x26a <uart0_put+0x4>
    UDR0 = ch;      // Load tx buffer with character to send
 270:	80 93 c6 00 	sts	0x00C6, r24
 274:	08 95       	ret

00000276 <uart0_stdio_put>:
* @param[in] uint8_t ch      Character to write
* @param[in] FILE *stream   Pointer to stream location for stdio
* @return uint8_t
*/
uint8_t uart0_stdio_put(uint8_t ch, FILE *steam) {
    uart0_put(ch);
 276:	0e 94 33 01 	call	0x266	; 0x266 <uart0_put>
    return(0);
}
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	08 95       	ret

0000027e <uart0_get>:
/*!
* @brief Get uint8_t over UART0
* @return uint8_t   Value from UART0
*/
uint8_t uart0_get(void) {
    while((UCSR0A & (1<<RXC0)) == 0x00);    // Wait until rx char flag is set
 27e:	e0 ec       	ldi	r30, 0xC0	; 192
 280:	f0 e0       	ldi	r31, 0x00	; 0
 282:	80 81       	ld	r24, Z
 284:	88 23       	and	r24, r24
 286:	ec f7       	brge	.-6      	; 0x282 <uart0_get+0x4>
    return(UDR0);    
 288:	80 91 c6 00 	lds	r24, 0x00C6
}
 28c:	08 95       	ret

0000028e <uart0_stdio_get>:
* @brief Read data over UART0 (stdio)
* @param[in] FILE *stream   Pointer to stream location for stdio
* @return uint8_t
*/
uint8_t uart0_stdio_get(FILE *stream) {
    uint8_t ch = uart0_get();
 28e:	0e 94 3f 01 	call	0x27e	; 0x27e <uart0_get>
    return(ch);
 292:	08 95       	ret

00000294 <__vector_11>:
uint8_t systck_s = 0;
uint8_t systck_m = 0;
uint8_t systck_h = 0;
uint16_t systck_d = 0;

ISR(TIMER1_COMPA_vect) {
 294:	1f 92       	push	r1
 296:	0f 92       	push	r0
 298:	0f b6       	in	r0, 0x3f	; 63
 29a:	0f 92       	push	r0
 29c:	11 24       	eor	r1, r1
 29e:	2f 93       	push	r18
 2a0:	8f 93       	push	r24
 2a2:	9f 93       	push	r25
    /* Increment systck global vars to keep system time */
    systck_ms++;
 2a4:	80 91 1d 02 	lds	r24, 0x021D
 2a8:	90 91 1e 02 	lds	r25, 0x021E
 2ac:	01 96       	adiw	r24, 0x01	; 1
    if(systck_ms >= 1000) {
 2ae:	88 3e       	cpi	r24, 0xE8	; 232
 2b0:	23 e0       	ldi	r18, 0x03	; 3
 2b2:	92 07       	cpc	r25, r18
 2b4:	28 f4       	brcc	.+10     	; 0x2c0 <__vector_11+0x2c>
uint8_t systck_h = 0;
uint16_t systck_d = 0;

ISR(TIMER1_COMPA_vect) {
    /* Increment systck global vars to keep system time */
    systck_ms++;
 2b6:	90 93 1e 02 	sts	0x021E, r25
 2ba:	80 93 1d 02 	sts	0x021D, r24
 2be:	2b c0       	rjmp	.+86     	; 0x316 <__vector_11+0x82>
    if(systck_ms >= 1000) {
        systck_ms = 0;
 2c0:	10 92 1e 02 	sts	0x021E, r1
 2c4:	10 92 1d 02 	sts	0x021D, r1
        systck_s++;
 2c8:	80 91 1c 02 	lds	r24, 0x021C
 2cc:	8f 5f       	subi	r24, 0xFF	; 255
        if(systck_s >= 60) {
 2ce:	8c 33       	cpi	r24, 0x3C	; 60
 2d0:	18 f4       	brcc	.+6      	; 0x2d8 <__vector_11+0x44>
ISR(TIMER1_COMPA_vect) {
    /* Increment systck global vars to keep system time */
    systck_ms++;
    if(systck_ms >= 1000) {
        systck_ms = 0;
        systck_s++;
 2d2:	80 93 1c 02 	sts	0x021C, r24
 2d6:	1f c0       	rjmp	.+62     	; 0x316 <__vector_11+0x82>
        if(systck_s >= 60) {
            systck_s = 0;
 2d8:	10 92 1c 02 	sts	0x021C, r1
            systck_m++;
 2dc:	80 91 1b 02 	lds	r24, 0x021B
 2e0:	8f 5f       	subi	r24, 0xFF	; 255
            if(systck_m >= 60) {
 2e2:	8c 33       	cpi	r24, 0x3C	; 60
 2e4:	18 f4       	brcc	.+6      	; 0x2ec <__vector_11+0x58>
    if(systck_ms >= 1000) {
        systck_ms = 0;
        systck_s++;
        if(systck_s >= 60) {
            systck_s = 0;
            systck_m++;
 2e6:	80 93 1b 02 	sts	0x021B, r24
 2ea:	15 c0       	rjmp	.+42     	; 0x316 <__vector_11+0x82>
            if(systck_m >= 60) {
                systck_m = 0;
 2ec:	10 92 1b 02 	sts	0x021B, r1
                systck_h++;
 2f0:	80 91 1a 02 	lds	r24, 0x021A
 2f4:	8f 5f       	subi	r24, 0xFF	; 255
                if(systck_h >= 24) {
 2f6:	88 31       	cpi	r24, 0x18	; 24
 2f8:	18 f4       	brcc	.+6      	; 0x300 <__vector_11+0x6c>
        if(systck_s >= 60) {
            systck_s = 0;
            systck_m++;
            if(systck_m >= 60) {
                systck_m = 0;
                systck_h++;
 2fa:	80 93 1a 02 	sts	0x021A, r24
 2fe:	0b c0       	rjmp	.+22     	; 0x316 <__vector_11+0x82>
                if(systck_h >= 24) {
                    systck_h = 0;
 300:	10 92 1a 02 	sts	0x021A, r1
                    systck_d++;                    
 304:	80 91 18 02 	lds	r24, 0x0218
 308:	90 91 19 02 	lds	r25, 0x0219
 30c:	01 96       	adiw	r24, 0x01	; 1
 30e:	90 93 19 02 	sts	0x0219, r25
 312:	80 93 18 02 	sts	0x0218, r24
                }
            }
        }        
    }
}
 316:	9f 91       	pop	r25
 318:	8f 91       	pop	r24
 31a:	2f 91       	pop	r18
 31c:	0f 90       	pop	r0
 31e:	0f be       	out	0x3f, r0	; 63
 320:	0f 90       	pop	r0
 322:	1f 90       	pop	r1
 324:	18 95       	reti

00000326 <timer1_1ms_init>:
/*!
* @brief Disable timer1 and timer1 interrupts
* @return void
*/
inline void timer1_disable(void) {
    TIMSK1 &= ~(1<<OCIE1A); // Disable Output compare Interrupt on Match A
 326:	af e6       	ldi	r26, 0x6F	; 111
 328:	b0 e0       	ldi	r27, 0x00	; 0
 32a:	8c 91       	ld	r24, X
 32c:	8d 7f       	andi	r24, 0xFD	; 253
 32e:	8c 93       	st	X, r24
    TCCR1B &= ~((1<<CS12) | (1<<CS11) | (1<<CS10)); // Disable timer1 clock source (disables timer)
 330:	e1 e8       	ldi	r30, 0x81	; 129
 332:	f0 e0       	ldi	r31, 0x00	; 0
 334:	80 81       	ld	r24, Z
 336:	88 7f       	andi	r24, 0xF8	; 248
 338:	80 83       	st	Z, r24
*/
void timer1_1ms_init(void) {
    static uint16_t timer1_1ms_compare_value = 250-1;
        
    timer1_disable();
    TCCR1A = 0x00;  // Make sure no pins are set to output
 33a:	10 92 80 00 	sts	0x0080, r1
    TCCR1B |= (1<<WGM12) | TIMER1_PRESCALE_MASK;  // Set CTC, prescalar to clk(io)/64 (250 counts per 1ms)
 33e:	80 81       	ld	r24, Z
 340:	8b 60       	ori	r24, 0x0B	; 11
 342:	80 83       	st	Z, r24
    OCR1A = timer1_1ms_compare_value;    
 344:	89 ef       	ldi	r24, 0xF9	; 249
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	90 93 89 00 	sts	0x0089, r25
 34c:	80 93 88 00 	sts	0x0088, r24
/*!
* @brief Enable timer1 and timer1 interrupts
* @return void
*/
inline void timer1_enable(void) {
    TIMSK1 |= (1<<OCIE1A);  // Enable Output Compare Interrupt on Match A
 350:	8c 91       	ld	r24, X
 352:	82 60       	ori	r24, 0x02	; 2
 354:	8c 93       	st	X, r24
    TCCR1B |= TIMER1_PRESCALE_MASK; // Enable timer1 clock source (disables timer)
 356:	80 81       	ld	r24, Z
 358:	83 60       	ori	r24, 0x03	; 3
 35a:	80 83       	st	Z, r24
 35c:	08 95       	ret

0000035e <__udivmodsi4>:
 35e:	a1 e2       	ldi	r26, 0x21	; 33
 360:	1a 2e       	mov	r1, r26
 362:	aa 1b       	sub	r26, r26
 364:	bb 1b       	sub	r27, r27
 366:	fd 01       	movw	r30, r26
 368:	0d c0       	rjmp	.+26     	; 0x384 <__udivmodsi4_ep>

0000036a <__udivmodsi4_loop>:
 36a:	aa 1f       	adc	r26, r26
 36c:	bb 1f       	adc	r27, r27
 36e:	ee 1f       	adc	r30, r30
 370:	ff 1f       	adc	r31, r31
 372:	a2 17       	cp	r26, r18
 374:	b3 07       	cpc	r27, r19
 376:	e4 07       	cpc	r30, r20
 378:	f5 07       	cpc	r31, r21
 37a:	20 f0       	brcs	.+8      	; 0x384 <__udivmodsi4_ep>
 37c:	a2 1b       	sub	r26, r18
 37e:	b3 0b       	sbc	r27, r19
 380:	e4 0b       	sbc	r30, r20
 382:	f5 0b       	sbc	r31, r21

00000384 <__udivmodsi4_ep>:
 384:	66 1f       	adc	r22, r22
 386:	77 1f       	adc	r23, r23
 388:	88 1f       	adc	r24, r24
 38a:	99 1f       	adc	r25, r25
 38c:	1a 94       	dec	r1
 38e:	69 f7       	brne	.-38     	; 0x36a <__udivmodsi4_loop>
 390:	60 95       	com	r22
 392:	70 95       	com	r23
 394:	80 95       	com	r24
 396:	90 95       	com	r25
 398:	9b 01       	movw	r18, r22
 39a:	ac 01       	movw	r20, r24
 39c:	bd 01       	movw	r22, r26
 39e:	cf 01       	movw	r24, r30
 3a0:	08 95       	ret

000003a2 <printf>:
 3a2:	a0 e0       	ldi	r26, 0x00	; 0
 3a4:	b0 e0       	ldi	r27, 0x00	; 0
 3a6:	e7 ed       	ldi	r30, 0xD7	; 215
 3a8:	f1 e0       	ldi	r31, 0x01	; 1
 3aa:	0c 94 a5 04 	jmp	0x94a	; 0x94a <__prologue_saves__+0x20>
 3ae:	ae 01       	movw	r20, r28
 3b0:	4b 5f       	subi	r20, 0xFB	; 251
 3b2:	5f 4f       	sbci	r21, 0xFF	; 255
 3b4:	fa 01       	movw	r30, r20
 3b6:	61 91       	ld	r22, Z+
 3b8:	71 91       	ld	r23, Z+
 3ba:	af 01       	movw	r20, r30
 3bc:	80 91 21 02 	lds	r24, 0x0221
 3c0:	90 91 22 02 	lds	r25, 0x0222
 3c4:	0e 94 17 02 	call	0x42e	; 0x42e <vfprintf>
 3c8:	e2 e0       	ldi	r30, 0x02	; 2
 3ca:	0c 94 c1 04 	jmp	0x982	; 0x982 <__epilogue_restores__+0x20>

000003ce <puts>:
 3ce:	0f 93       	push	r16
 3d0:	1f 93       	push	r17
 3d2:	cf 93       	push	r28
 3d4:	df 93       	push	r29
 3d6:	e0 91 21 02 	lds	r30, 0x0221
 3da:	f0 91 22 02 	lds	r31, 0x0222
 3de:	23 81       	ldd	r18, Z+3	; 0x03
 3e0:	21 ff       	sbrs	r18, 1
 3e2:	1b c0       	rjmp	.+54     	; 0x41a <puts+0x4c>
 3e4:	8c 01       	movw	r16, r24
 3e6:	d0 e0       	ldi	r29, 0x00	; 0
 3e8:	c0 e0       	ldi	r28, 0x00	; 0
 3ea:	f8 01       	movw	r30, r16
 3ec:	81 91       	ld	r24, Z+
 3ee:	8f 01       	movw	r16, r30
 3f0:	60 91 21 02 	lds	r22, 0x0221
 3f4:	70 91 22 02 	lds	r23, 0x0222
 3f8:	db 01       	movw	r26, r22
 3fa:	18 96       	adiw	r26, 0x08	; 8
 3fc:	ed 91       	ld	r30, X+
 3fe:	fc 91       	ld	r31, X
 400:	19 97       	sbiw	r26, 0x09	; 9
 402:	88 23       	and	r24, r24
 404:	31 f0       	breq	.+12     	; 0x412 <puts+0x44>
 406:	09 95       	icall
 408:	89 2b       	or	r24, r25
 40a:	79 f3       	breq	.-34     	; 0x3ea <puts+0x1c>
 40c:	df ef       	ldi	r29, 0xFF	; 255
 40e:	cf ef       	ldi	r28, 0xFF	; 255
 410:	ec cf       	rjmp	.-40     	; 0x3ea <puts+0x1c>
 412:	8a e0       	ldi	r24, 0x0A	; 10
 414:	09 95       	icall
 416:	89 2b       	or	r24, r25
 418:	19 f0       	breq	.+6      	; 0x420 <puts+0x52>
 41a:	8f ef       	ldi	r24, 0xFF	; 255
 41c:	9f ef       	ldi	r25, 0xFF	; 255
 41e:	02 c0       	rjmp	.+4      	; 0x424 <puts+0x56>
 420:	8d 2f       	mov	r24, r29
 422:	9c 2f       	mov	r25, r28
 424:	df 91       	pop	r29
 426:	cf 91       	pop	r28
 428:	1f 91       	pop	r17
 42a:	0f 91       	pop	r16
 42c:	08 95       	ret

0000042e <vfprintf>:
 42e:	ac e0       	ldi	r26, 0x0C	; 12
 430:	b0 e0       	ldi	r27, 0x00	; 0
 432:	ed e1       	ldi	r30, 0x1D	; 29
 434:	f2 e0       	ldi	r31, 0x02	; 2
 436:	0c 94 95 04 	jmp	0x92a	; 0x92a <__prologue_saves__>
 43a:	7c 01       	movw	r14, r24
 43c:	6b 01       	movw	r12, r22
 43e:	8a 01       	movw	r16, r20
 440:	fc 01       	movw	r30, r24
 442:	17 82       	std	Z+7, r1	; 0x07
 444:	16 82       	std	Z+6, r1	; 0x06
 446:	83 81       	ldd	r24, Z+3	; 0x03
 448:	81 ff       	sbrs	r24, 1
 44a:	bd c1       	rjmp	.+890    	; 0x7c6 <vfprintf+0x398>
 44c:	ce 01       	movw	r24, r28
 44e:	01 96       	adiw	r24, 0x01	; 1
 450:	4c 01       	movw	r8, r24
 452:	f7 01       	movw	r30, r14
 454:	93 81       	ldd	r25, Z+3	; 0x03
 456:	f6 01       	movw	r30, r12
 458:	93 fd       	sbrc	r25, 3
 45a:	85 91       	lpm	r24, Z+
 45c:	93 ff       	sbrs	r25, 3
 45e:	81 91       	ld	r24, Z+
 460:	6f 01       	movw	r12, r30
 462:	88 23       	and	r24, r24
 464:	09 f4       	brne	.+2      	; 0x468 <vfprintf+0x3a>
 466:	ab c1       	rjmp	.+854    	; 0x7be <vfprintf+0x390>
 468:	85 32       	cpi	r24, 0x25	; 37
 46a:	39 f4       	brne	.+14     	; 0x47a <vfprintf+0x4c>
 46c:	93 fd       	sbrc	r25, 3
 46e:	85 91       	lpm	r24, Z+
 470:	93 ff       	sbrs	r25, 3
 472:	81 91       	ld	r24, Z+
 474:	6f 01       	movw	r12, r30
 476:	85 32       	cpi	r24, 0x25	; 37
 478:	29 f4       	brne	.+10     	; 0x484 <vfprintf+0x56>
 47a:	b7 01       	movw	r22, r14
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	0e 94 ff 03 	call	0x7fe	; 0x7fe <fputc>
 482:	e7 cf       	rjmp	.-50     	; 0x452 <vfprintf+0x24>
 484:	51 2c       	mov	r5, r1
 486:	31 2c       	mov	r3, r1
 488:	20 e0       	ldi	r18, 0x00	; 0
 48a:	20 32       	cpi	r18, 0x20	; 32
 48c:	a0 f4       	brcc	.+40     	; 0x4b6 <vfprintf+0x88>
 48e:	8b 32       	cpi	r24, 0x2B	; 43
 490:	69 f0       	breq	.+26     	; 0x4ac <vfprintf+0x7e>
 492:	30 f4       	brcc	.+12     	; 0x4a0 <vfprintf+0x72>
 494:	80 32       	cpi	r24, 0x20	; 32
 496:	59 f0       	breq	.+22     	; 0x4ae <vfprintf+0x80>
 498:	83 32       	cpi	r24, 0x23	; 35
 49a:	69 f4       	brne	.+26     	; 0x4b6 <vfprintf+0x88>
 49c:	20 61       	ori	r18, 0x10	; 16
 49e:	2c c0       	rjmp	.+88     	; 0x4f8 <vfprintf+0xca>
 4a0:	8d 32       	cpi	r24, 0x2D	; 45
 4a2:	39 f0       	breq	.+14     	; 0x4b2 <vfprintf+0x84>
 4a4:	80 33       	cpi	r24, 0x30	; 48
 4a6:	39 f4       	brne	.+14     	; 0x4b6 <vfprintf+0x88>
 4a8:	21 60       	ori	r18, 0x01	; 1
 4aa:	26 c0       	rjmp	.+76     	; 0x4f8 <vfprintf+0xca>
 4ac:	22 60       	ori	r18, 0x02	; 2
 4ae:	24 60       	ori	r18, 0x04	; 4
 4b0:	23 c0       	rjmp	.+70     	; 0x4f8 <vfprintf+0xca>
 4b2:	28 60       	ori	r18, 0x08	; 8
 4b4:	21 c0       	rjmp	.+66     	; 0x4f8 <vfprintf+0xca>
 4b6:	27 fd       	sbrc	r18, 7
 4b8:	27 c0       	rjmp	.+78     	; 0x508 <vfprintf+0xda>
 4ba:	30 ed       	ldi	r19, 0xD0	; 208
 4bc:	38 0f       	add	r19, r24
 4be:	3a 30       	cpi	r19, 0x0A	; 10
 4c0:	78 f4       	brcc	.+30     	; 0x4e0 <vfprintf+0xb2>
 4c2:	26 ff       	sbrs	r18, 6
 4c4:	06 c0       	rjmp	.+12     	; 0x4d2 <vfprintf+0xa4>
 4c6:	fa e0       	ldi	r31, 0x0A	; 10
 4c8:	5f 9e       	mul	r5, r31
 4ca:	30 0d       	add	r19, r0
 4cc:	11 24       	eor	r1, r1
 4ce:	53 2e       	mov	r5, r19
 4d0:	13 c0       	rjmp	.+38     	; 0x4f8 <vfprintf+0xca>
 4d2:	8a e0       	ldi	r24, 0x0A	; 10
 4d4:	38 9e       	mul	r3, r24
 4d6:	30 0d       	add	r19, r0
 4d8:	11 24       	eor	r1, r1
 4da:	33 2e       	mov	r3, r19
 4dc:	20 62       	ori	r18, 0x20	; 32
 4de:	0c c0       	rjmp	.+24     	; 0x4f8 <vfprintf+0xca>
 4e0:	8e 32       	cpi	r24, 0x2E	; 46
 4e2:	21 f4       	brne	.+8      	; 0x4ec <vfprintf+0xbe>
 4e4:	26 fd       	sbrc	r18, 6
 4e6:	6b c1       	rjmp	.+726    	; 0x7be <vfprintf+0x390>
 4e8:	20 64       	ori	r18, 0x40	; 64
 4ea:	06 c0       	rjmp	.+12     	; 0x4f8 <vfprintf+0xca>
 4ec:	8c 36       	cpi	r24, 0x6C	; 108
 4ee:	11 f4       	brne	.+4      	; 0x4f4 <vfprintf+0xc6>
 4f0:	20 68       	ori	r18, 0x80	; 128
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <vfprintf+0xca>
 4f4:	88 36       	cpi	r24, 0x68	; 104
 4f6:	41 f4       	brne	.+16     	; 0x508 <vfprintf+0xda>
 4f8:	f6 01       	movw	r30, r12
 4fa:	93 fd       	sbrc	r25, 3
 4fc:	85 91       	lpm	r24, Z+
 4fe:	93 ff       	sbrs	r25, 3
 500:	81 91       	ld	r24, Z+
 502:	6f 01       	movw	r12, r30
 504:	81 11       	cpse	r24, r1
 506:	c1 cf       	rjmp	.-126    	; 0x48a <vfprintf+0x5c>
 508:	98 2f       	mov	r25, r24
 50a:	9f 7d       	andi	r25, 0xDF	; 223
 50c:	95 54       	subi	r25, 0x45	; 69
 50e:	93 30       	cpi	r25, 0x03	; 3
 510:	28 f4       	brcc	.+10     	; 0x51c <vfprintf+0xee>
 512:	0c 5f       	subi	r16, 0xFC	; 252
 514:	1f 4f       	sbci	r17, 0xFF	; 255
 516:	ff e3       	ldi	r31, 0x3F	; 63
 518:	f9 83       	std	Y+1, r31	; 0x01
 51a:	0d c0       	rjmp	.+26     	; 0x536 <vfprintf+0x108>
 51c:	83 36       	cpi	r24, 0x63	; 99
 51e:	31 f0       	breq	.+12     	; 0x52c <vfprintf+0xfe>
 520:	83 37       	cpi	r24, 0x73	; 115
 522:	71 f0       	breq	.+28     	; 0x540 <vfprintf+0x112>
 524:	83 35       	cpi	r24, 0x53	; 83
 526:	09 f0       	breq	.+2      	; 0x52a <vfprintf+0xfc>
 528:	5b c0       	rjmp	.+182    	; 0x5e0 <vfprintf+0x1b2>
 52a:	22 c0       	rjmp	.+68     	; 0x570 <vfprintf+0x142>
 52c:	f8 01       	movw	r30, r16
 52e:	80 81       	ld	r24, Z
 530:	89 83       	std	Y+1, r24	; 0x01
 532:	0e 5f       	subi	r16, 0xFE	; 254
 534:	1f 4f       	sbci	r17, 0xFF	; 255
 536:	44 24       	eor	r4, r4
 538:	43 94       	inc	r4
 53a:	51 2c       	mov	r5, r1
 53c:	54 01       	movw	r10, r8
 53e:	15 c0       	rjmp	.+42     	; 0x56a <vfprintf+0x13c>
 540:	38 01       	movw	r6, r16
 542:	f2 e0       	ldi	r31, 0x02	; 2
 544:	6f 0e       	add	r6, r31
 546:	71 1c       	adc	r7, r1
 548:	f8 01       	movw	r30, r16
 54a:	a0 80       	ld	r10, Z
 54c:	b1 80       	ldd	r11, Z+1	; 0x01
 54e:	26 ff       	sbrs	r18, 6
 550:	03 c0       	rjmp	.+6      	; 0x558 <vfprintf+0x12a>
 552:	65 2d       	mov	r22, r5
 554:	70 e0       	ldi	r23, 0x00	; 0
 556:	02 c0       	rjmp	.+4      	; 0x55c <vfprintf+0x12e>
 558:	6f ef       	ldi	r22, 0xFF	; 255
 55a:	7f ef       	ldi	r23, 0xFF	; 255
 55c:	c5 01       	movw	r24, r10
 55e:	2c 87       	std	Y+12, r18	; 0x0c
 560:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <strnlen>
 564:	2c 01       	movw	r4, r24
 566:	83 01       	movw	r16, r6
 568:	2c 85       	ldd	r18, Y+12	; 0x0c
 56a:	2f 77       	andi	r18, 0x7F	; 127
 56c:	22 2e       	mov	r2, r18
 56e:	17 c0       	rjmp	.+46     	; 0x59e <vfprintf+0x170>
 570:	38 01       	movw	r6, r16
 572:	f2 e0       	ldi	r31, 0x02	; 2
 574:	6f 0e       	add	r6, r31
 576:	71 1c       	adc	r7, r1
 578:	f8 01       	movw	r30, r16
 57a:	a0 80       	ld	r10, Z
 57c:	b1 80       	ldd	r11, Z+1	; 0x01
 57e:	26 ff       	sbrs	r18, 6
 580:	03 c0       	rjmp	.+6      	; 0x588 <vfprintf+0x15a>
 582:	65 2d       	mov	r22, r5
 584:	70 e0       	ldi	r23, 0x00	; 0
 586:	02 c0       	rjmp	.+4      	; 0x58c <vfprintf+0x15e>
 588:	6f ef       	ldi	r22, 0xFF	; 255
 58a:	7f ef       	ldi	r23, 0xFF	; 255
 58c:	c5 01       	movw	r24, r10
 58e:	2c 87       	std	Y+12, r18	; 0x0c
 590:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <strnlen_P>
 594:	2c 01       	movw	r4, r24
 596:	2c 85       	ldd	r18, Y+12	; 0x0c
 598:	20 68       	ori	r18, 0x80	; 128
 59a:	22 2e       	mov	r2, r18
 59c:	83 01       	movw	r16, r6
 59e:	23 fc       	sbrc	r2, 3
 5a0:	1b c0       	rjmp	.+54     	; 0x5d8 <vfprintf+0x1aa>
 5a2:	83 2d       	mov	r24, r3
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	48 16       	cp	r4, r24
 5a8:	59 06       	cpc	r5, r25
 5aa:	b0 f4       	brcc	.+44     	; 0x5d8 <vfprintf+0x1aa>
 5ac:	b7 01       	movw	r22, r14
 5ae:	80 e2       	ldi	r24, 0x20	; 32
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	0e 94 ff 03 	call	0x7fe	; 0x7fe <fputc>
 5b6:	3a 94       	dec	r3
 5b8:	f4 cf       	rjmp	.-24     	; 0x5a2 <vfprintf+0x174>
 5ba:	f5 01       	movw	r30, r10
 5bc:	27 fc       	sbrc	r2, 7
 5be:	85 91       	lpm	r24, Z+
 5c0:	27 fe       	sbrs	r2, 7
 5c2:	81 91       	ld	r24, Z+
 5c4:	5f 01       	movw	r10, r30
 5c6:	b7 01       	movw	r22, r14
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 ff 03 	call	0x7fe	; 0x7fe <fputc>
 5ce:	31 10       	cpse	r3, r1
 5d0:	3a 94       	dec	r3
 5d2:	f1 e0       	ldi	r31, 0x01	; 1
 5d4:	4f 1a       	sub	r4, r31
 5d6:	51 08       	sbc	r5, r1
 5d8:	41 14       	cp	r4, r1
 5da:	51 04       	cpc	r5, r1
 5dc:	71 f7       	brne	.-36     	; 0x5ba <vfprintf+0x18c>
 5de:	e5 c0       	rjmp	.+458    	; 0x7aa <vfprintf+0x37c>
 5e0:	84 36       	cpi	r24, 0x64	; 100
 5e2:	11 f0       	breq	.+4      	; 0x5e8 <vfprintf+0x1ba>
 5e4:	89 36       	cpi	r24, 0x69	; 105
 5e6:	39 f5       	brne	.+78     	; 0x636 <vfprintf+0x208>
 5e8:	f8 01       	movw	r30, r16
 5ea:	27 ff       	sbrs	r18, 7
 5ec:	07 c0       	rjmp	.+14     	; 0x5fc <vfprintf+0x1ce>
 5ee:	60 81       	ld	r22, Z
 5f0:	71 81       	ldd	r23, Z+1	; 0x01
 5f2:	82 81       	ldd	r24, Z+2	; 0x02
 5f4:	93 81       	ldd	r25, Z+3	; 0x03
 5f6:	0c 5f       	subi	r16, 0xFC	; 252
 5f8:	1f 4f       	sbci	r17, 0xFF	; 255
 5fa:	08 c0       	rjmp	.+16     	; 0x60c <vfprintf+0x1de>
 5fc:	60 81       	ld	r22, Z
 5fe:	71 81       	ldd	r23, Z+1	; 0x01
 600:	07 2e       	mov	r0, r23
 602:	00 0c       	add	r0, r0
 604:	88 0b       	sbc	r24, r24
 606:	99 0b       	sbc	r25, r25
 608:	0e 5f       	subi	r16, 0xFE	; 254
 60a:	1f 4f       	sbci	r17, 0xFF	; 255
 60c:	2f 76       	andi	r18, 0x6F	; 111
 60e:	72 2e       	mov	r7, r18
 610:	97 ff       	sbrs	r25, 7
 612:	09 c0       	rjmp	.+18     	; 0x626 <vfprintf+0x1f8>
 614:	90 95       	com	r25
 616:	80 95       	com	r24
 618:	70 95       	com	r23
 61a:	61 95       	neg	r22
 61c:	7f 4f       	sbci	r23, 0xFF	; 255
 61e:	8f 4f       	sbci	r24, 0xFF	; 255
 620:	9f 4f       	sbci	r25, 0xFF	; 255
 622:	20 68       	ori	r18, 0x80	; 128
 624:	72 2e       	mov	r7, r18
 626:	2a e0       	ldi	r18, 0x0A	; 10
 628:	30 e0       	ldi	r19, 0x00	; 0
 62a:	a4 01       	movw	r20, r8
 62c:	0e 94 37 04 	call	0x86e	; 0x86e <__ultoa_invert>
 630:	a8 2e       	mov	r10, r24
 632:	a8 18       	sub	r10, r8
 634:	44 c0       	rjmp	.+136    	; 0x6be <vfprintf+0x290>
 636:	85 37       	cpi	r24, 0x75	; 117
 638:	29 f4       	brne	.+10     	; 0x644 <vfprintf+0x216>
 63a:	2f 7e       	andi	r18, 0xEF	; 239
 63c:	b2 2e       	mov	r11, r18
 63e:	2a e0       	ldi	r18, 0x0A	; 10
 640:	30 e0       	ldi	r19, 0x00	; 0
 642:	25 c0       	rjmp	.+74     	; 0x68e <vfprintf+0x260>
 644:	f2 2f       	mov	r31, r18
 646:	f9 7f       	andi	r31, 0xF9	; 249
 648:	bf 2e       	mov	r11, r31
 64a:	8f 36       	cpi	r24, 0x6F	; 111
 64c:	c1 f0       	breq	.+48     	; 0x67e <vfprintf+0x250>
 64e:	18 f4       	brcc	.+6      	; 0x656 <vfprintf+0x228>
 650:	88 35       	cpi	r24, 0x58	; 88
 652:	79 f0       	breq	.+30     	; 0x672 <vfprintf+0x244>
 654:	b4 c0       	rjmp	.+360    	; 0x7be <vfprintf+0x390>
 656:	80 37       	cpi	r24, 0x70	; 112
 658:	19 f0       	breq	.+6      	; 0x660 <vfprintf+0x232>
 65a:	88 37       	cpi	r24, 0x78	; 120
 65c:	21 f0       	breq	.+8      	; 0x666 <vfprintf+0x238>
 65e:	af c0       	rjmp	.+350    	; 0x7be <vfprintf+0x390>
 660:	2f 2f       	mov	r18, r31
 662:	20 61       	ori	r18, 0x10	; 16
 664:	b2 2e       	mov	r11, r18
 666:	b4 fe       	sbrs	r11, 4
 668:	0d c0       	rjmp	.+26     	; 0x684 <vfprintf+0x256>
 66a:	8b 2d       	mov	r24, r11
 66c:	84 60       	ori	r24, 0x04	; 4
 66e:	b8 2e       	mov	r11, r24
 670:	09 c0       	rjmp	.+18     	; 0x684 <vfprintf+0x256>
 672:	24 ff       	sbrs	r18, 4
 674:	0a c0       	rjmp	.+20     	; 0x68a <vfprintf+0x25c>
 676:	9f 2f       	mov	r25, r31
 678:	96 60       	ori	r25, 0x06	; 6
 67a:	b9 2e       	mov	r11, r25
 67c:	06 c0       	rjmp	.+12     	; 0x68a <vfprintf+0x25c>
 67e:	28 e0       	ldi	r18, 0x08	; 8
 680:	30 e0       	ldi	r19, 0x00	; 0
 682:	05 c0       	rjmp	.+10     	; 0x68e <vfprintf+0x260>
 684:	20 e1       	ldi	r18, 0x10	; 16
 686:	30 e0       	ldi	r19, 0x00	; 0
 688:	02 c0       	rjmp	.+4      	; 0x68e <vfprintf+0x260>
 68a:	20 e1       	ldi	r18, 0x10	; 16
 68c:	32 e0       	ldi	r19, 0x02	; 2
 68e:	f8 01       	movw	r30, r16
 690:	b7 fe       	sbrs	r11, 7
 692:	07 c0       	rjmp	.+14     	; 0x6a2 <vfprintf+0x274>
 694:	60 81       	ld	r22, Z
 696:	71 81       	ldd	r23, Z+1	; 0x01
 698:	82 81       	ldd	r24, Z+2	; 0x02
 69a:	93 81       	ldd	r25, Z+3	; 0x03
 69c:	0c 5f       	subi	r16, 0xFC	; 252
 69e:	1f 4f       	sbci	r17, 0xFF	; 255
 6a0:	06 c0       	rjmp	.+12     	; 0x6ae <vfprintf+0x280>
 6a2:	60 81       	ld	r22, Z
 6a4:	71 81       	ldd	r23, Z+1	; 0x01
 6a6:	80 e0       	ldi	r24, 0x00	; 0
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	0e 5f       	subi	r16, 0xFE	; 254
 6ac:	1f 4f       	sbci	r17, 0xFF	; 255
 6ae:	a4 01       	movw	r20, r8
 6b0:	0e 94 37 04 	call	0x86e	; 0x86e <__ultoa_invert>
 6b4:	a8 2e       	mov	r10, r24
 6b6:	a8 18       	sub	r10, r8
 6b8:	fb 2d       	mov	r31, r11
 6ba:	ff 77       	andi	r31, 0x7F	; 127
 6bc:	7f 2e       	mov	r7, r31
 6be:	76 fe       	sbrs	r7, 6
 6c0:	0b c0       	rjmp	.+22     	; 0x6d8 <vfprintf+0x2aa>
 6c2:	37 2d       	mov	r19, r7
 6c4:	3e 7f       	andi	r19, 0xFE	; 254
 6c6:	a5 14       	cp	r10, r5
 6c8:	50 f4       	brcc	.+20     	; 0x6de <vfprintf+0x2b0>
 6ca:	74 fe       	sbrs	r7, 4
 6cc:	0a c0       	rjmp	.+20     	; 0x6e2 <vfprintf+0x2b4>
 6ce:	72 fc       	sbrc	r7, 2
 6d0:	08 c0       	rjmp	.+16     	; 0x6e2 <vfprintf+0x2b4>
 6d2:	37 2d       	mov	r19, r7
 6d4:	3e 7e       	andi	r19, 0xEE	; 238
 6d6:	05 c0       	rjmp	.+10     	; 0x6e2 <vfprintf+0x2b4>
 6d8:	ba 2c       	mov	r11, r10
 6da:	37 2d       	mov	r19, r7
 6dc:	03 c0       	rjmp	.+6      	; 0x6e4 <vfprintf+0x2b6>
 6de:	ba 2c       	mov	r11, r10
 6e0:	01 c0       	rjmp	.+2      	; 0x6e4 <vfprintf+0x2b6>
 6e2:	b5 2c       	mov	r11, r5
 6e4:	34 ff       	sbrs	r19, 4
 6e6:	0d c0       	rjmp	.+26     	; 0x702 <vfprintf+0x2d4>
 6e8:	fe 01       	movw	r30, r28
 6ea:	ea 0d       	add	r30, r10
 6ec:	f1 1d       	adc	r31, r1
 6ee:	80 81       	ld	r24, Z
 6f0:	80 33       	cpi	r24, 0x30	; 48
 6f2:	11 f4       	brne	.+4      	; 0x6f8 <vfprintf+0x2ca>
 6f4:	39 7e       	andi	r19, 0xE9	; 233
 6f6:	09 c0       	rjmp	.+18     	; 0x70a <vfprintf+0x2dc>
 6f8:	32 ff       	sbrs	r19, 2
 6fa:	06 c0       	rjmp	.+12     	; 0x708 <vfprintf+0x2da>
 6fc:	b3 94       	inc	r11
 6fe:	b3 94       	inc	r11
 700:	04 c0       	rjmp	.+8      	; 0x70a <vfprintf+0x2dc>
 702:	83 2f       	mov	r24, r19
 704:	86 78       	andi	r24, 0x86	; 134
 706:	09 f0       	breq	.+2      	; 0x70a <vfprintf+0x2dc>
 708:	b3 94       	inc	r11
 70a:	33 fd       	sbrc	r19, 3
 70c:	13 c0       	rjmp	.+38     	; 0x734 <vfprintf+0x306>
 70e:	30 ff       	sbrs	r19, 0
 710:	06 c0       	rjmp	.+12     	; 0x71e <vfprintf+0x2f0>
 712:	5a 2c       	mov	r5, r10
 714:	b3 14       	cp	r11, r3
 716:	18 f4       	brcc	.+6      	; 0x71e <vfprintf+0x2f0>
 718:	53 0c       	add	r5, r3
 71a:	5b 18       	sub	r5, r11
 71c:	b3 2c       	mov	r11, r3
 71e:	b3 14       	cp	r11, r3
 720:	68 f4       	brcc	.+26     	; 0x73c <vfprintf+0x30e>
 722:	b7 01       	movw	r22, r14
 724:	80 e2       	ldi	r24, 0x20	; 32
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	3c 87       	std	Y+12, r19	; 0x0c
 72a:	0e 94 ff 03 	call	0x7fe	; 0x7fe <fputc>
 72e:	b3 94       	inc	r11
 730:	3c 85       	ldd	r19, Y+12	; 0x0c
 732:	f5 cf       	rjmp	.-22     	; 0x71e <vfprintf+0x2f0>
 734:	b3 14       	cp	r11, r3
 736:	10 f4       	brcc	.+4      	; 0x73c <vfprintf+0x30e>
 738:	3b 18       	sub	r3, r11
 73a:	01 c0       	rjmp	.+2      	; 0x73e <vfprintf+0x310>
 73c:	31 2c       	mov	r3, r1
 73e:	34 ff       	sbrs	r19, 4
 740:	12 c0       	rjmp	.+36     	; 0x766 <vfprintf+0x338>
 742:	b7 01       	movw	r22, r14
 744:	80 e3       	ldi	r24, 0x30	; 48
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	3c 87       	std	Y+12, r19	; 0x0c
 74a:	0e 94 ff 03 	call	0x7fe	; 0x7fe <fputc>
 74e:	3c 85       	ldd	r19, Y+12	; 0x0c
 750:	32 ff       	sbrs	r19, 2
 752:	17 c0       	rjmp	.+46     	; 0x782 <vfprintf+0x354>
 754:	31 fd       	sbrc	r19, 1
 756:	03 c0       	rjmp	.+6      	; 0x75e <vfprintf+0x330>
 758:	88 e7       	ldi	r24, 0x78	; 120
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	02 c0       	rjmp	.+4      	; 0x762 <vfprintf+0x334>
 75e:	88 e5       	ldi	r24, 0x58	; 88
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	b7 01       	movw	r22, r14
 764:	0c c0       	rjmp	.+24     	; 0x77e <vfprintf+0x350>
 766:	83 2f       	mov	r24, r19
 768:	86 78       	andi	r24, 0x86	; 134
 76a:	59 f0       	breq	.+22     	; 0x782 <vfprintf+0x354>
 76c:	31 ff       	sbrs	r19, 1
 76e:	02 c0       	rjmp	.+4      	; 0x774 <vfprintf+0x346>
 770:	8b e2       	ldi	r24, 0x2B	; 43
 772:	01 c0       	rjmp	.+2      	; 0x776 <vfprintf+0x348>
 774:	80 e2       	ldi	r24, 0x20	; 32
 776:	37 fd       	sbrc	r19, 7
 778:	8d e2       	ldi	r24, 0x2D	; 45
 77a:	b7 01       	movw	r22, r14
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	0e 94 ff 03 	call	0x7fe	; 0x7fe <fputc>
 782:	a5 14       	cp	r10, r5
 784:	38 f4       	brcc	.+14     	; 0x794 <vfprintf+0x366>
 786:	b7 01       	movw	r22, r14
 788:	80 e3       	ldi	r24, 0x30	; 48
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	0e 94 ff 03 	call	0x7fe	; 0x7fe <fputc>
 790:	5a 94       	dec	r5
 792:	f7 cf       	rjmp	.-18     	; 0x782 <vfprintf+0x354>
 794:	aa 94       	dec	r10
 796:	f4 01       	movw	r30, r8
 798:	ea 0d       	add	r30, r10
 79a:	f1 1d       	adc	r31, r1
 79c:	80 81       	ld	r24, Z
 79e:	b7 01       	movw	r22, r14
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	0e 94 ff 03 	call	0x7fe	; 0x7fe <fputc>
 7a6:	a1 10       	cpse	r10, r1
 7a8:	f5 cf       	rjmp	.-22     	; 0x794 <vfprintf+0x366>
 7aa:	33 20       	and	r3, r3
 7ac:	09 f4       	brne	.+2      	; 0x7b0 <vfprintf+0x382>
 7ae:	51 ce       	rjmp	.-862    	; 0x452 <vfprintf+0x24>
 7b0:	b7 01       	movw	r22, r14
 7b2:	80 e2       	ldi	r24, 0x20	; 32
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	0e 94 ff 03 	call	0x7fe	; 0x7fe <fputc>
 7ba:	3a 94       	dec	r3
 7bc:	f6 cf       	rjmp	.-20     	; 0x7aa <vfprintf+0x37c>
 7be:	f7 01       	movw	r30, r14
 7c0:	86 81       	ldd	r24, Z+6	; 0x06
 7c2:	97 81       	ldd	r25, Z+7	; 0x07
 7c4:	02 c0       	rjmp	.+4      	; 0x7ca <vfprintf+0x39c>
 7c6:	8f ef       	ldi	r24, 0xFF	; 255
 7c8:	9f ef       	ldi	r25, 0xFF	; 255
 7ca:	2c 96       	adiw	r28, 0x0c	; 12
 7cc:	e2 e1       	ldi	r30, 0x12	; 18
 7ce:	0c 94 b1 04 	jmp	0x962	; 0x962 <__epilogue_restores__>

000007d2 <strnlen_P>:
 7d2:	fc 01       	movw	r30, r24
 7d4:	05 90       	lpm	r0, Z+
 7d6:	61 50       	subi	r22, 0x01	; 1
 7d8:	70 40       	sbci	r23, 0x00	; 0
 7da:	01 10       	cpse	r0, r1
 7dc:	d8 f7       	brcc	.-10     	; 0x7d4 <strnlen_P+0x2>
 7de:	80 95       	com	r24
 7e0:	90 95       	com	r25
 7e2:	8e 0f       	add	r24, r30
 7e4:	9f 1f       	adc	r25, r31
 7e6:	08 95       	ret

000007e8 <strnlen>:
 7e8:	fc 01       	movw	r30, r24
 7ea:	61 50       	subi	r22, 0x01	; 1
 7ec:	70 40       	sbci	r23, 0x00	; 0
 7ee:	01 90       	ld	r0, Z+
 7f0:	01 10       	cpse	r0, r1
 7f2:	d8 f7       	brcc	.-10     	; 0x7ea <strnlen+0x2>
 7f4:	80 95       	com	r24
 7f6:	90 95       	com	r25
 7f8:	8e 0f       	add	r24, r30
 7fa:	9f 1f       	adc	r25, r31
 7fc:	08 95       	ret

000007fe <fputc>:
 7fe:	0f 93       	push	r16
 800:	1f 93       	push	r17
 802:	cf 93       	push	r28
 804:	df 93       	push	r29
 806:	fb 01       	movw	r30, r22
 808:	23 81       	ldd	r18, Z+3	; 0x03
 80a:	21 fd       	sbrc	r18, 1
 80c:	03 c0       	rjmp	.+6      	; 0x814 <fputc+0x16>
 80e:	8f ef       	ldi	r24, 0xFF	; 255
 810:	9f ef       	ldi	r25, 0xFF	; 255
 812:	28 c0       	rjmp	.+80     	; 0x864 <fputc+0x66>
 814:	22 ff       	sbrs	r18, 2
 816:	16 c0       	rjmp	.+44     	; 0x844 <fputc+0x46>
 818:	46 81       	ldd	r20, Z+6	; 0x06
 81a:	57 81       	ldd	r21, Z+7	; 0x07
 81c:	24 81       	ldd	r18, Z+4	; 0x04
 81e:	35 81       	ldd	r19, Z+5	; 0x05
 820:	42 17       	cp	r20, r18
 822:	53 07       	cpc	r21, r19
 824:	44 f4       	brge	.+16     	; 0x836 <fputc+0x38>
 826:	a0 81       	ld	r26, Z
 828:	b1 81       	ldd	r27, Z+1	; 0x01
 82a:	9d 01       	movw	r18, r26
 82c:	2f 5f       	subi	r18, 0xFF	; 255
 82e:	3f 4f       	sbci	r19, 0xFF	; 255
 830:	31 83       	std	Z+1, r19	; 0x01
 832:	20 83       	st	Z, r18
 834:	8c 93       	st	X, r24
 836:	26 81       	ldd	r18, Z+6	; 0x06
 838:	37 81       	ldd	r19, Z+7	; 0x07
 83a:	2f 5f       	subi	r18, 0xFF	; 255
 83c:	3f 4f       	sbci	r19, 0xFF	; 255
 83e:	37 83       	std	Z+7, r19	; 0x07
 840:	26 83       	std	Z+6, r18	; 0x06
 842:	10 c0       	rjmp	.+32     	; 0x864 <fputc+0x66>
 844:	eb 01       	movw	r28, r22
 846:	09 2f       	mov	r16, r25
 848:	18 2f       	mov	r17, r24
 84a:	00 84       	ldd	r0, Z+8	; 0x08
 84c:	f1 85       	ldd	r31, Z+9	; 0x09
 84e:	e0 2d       	mov	r30, r0
 850:	09 95       	icall
 852:	89 2b       	or	r24, r25
 854:	e1 f6       	brne	.-72     	; 0x80e <fputc+0x10>
 856:	8e 81       	ldd	r24, Y+6	; 0x06
 858:	9f 81       	ldd	r25, Y+7	; 0x07
 85a:	01 96       	adiw	r24, 0x01	; 1
 85c:	9f 83       	std	Y+7, r25	; 0x07
 85e:	8e 83       	std	Y+6, r24	; 0x06
 860:	81 2f       	mov	r24, r17
 862:	90 2f       	mov	r25, r16
 864:	df 91       	pop	r29
 866:	cf 91       	pop	r28
 868:	1f 91       	pop	r17
 86a:	0f 91       	pop	r16
 86c:	08 95       	ret

0000086e <__ultoa_invert>:
 86e:	fa 01       	movw	r30, r20
 870:	aa 27       	eor	r26, r26
 872:	28 30       	cpi	r18, 0x08	; 8
 874:	51 f1       	breq	.+84     	; 0x8ca <__ultoa_invert+0x5c>
 876:	20 31       	cpi	r18, 0x10	; 16
 878:	81 f1       	breq	.+96     	; 0x8da <__ultoa_invert+0x6c>
 87a:	e8 94       	clt
 87c:	6f 93       	push	r22
 87e:	6e 7f       	andi	r22, 0xFE	; 254
 880:	6e 5f       	subi	r22, 0xFE	; 254
 882:	7f 4f       	sbci	r23, 0xFF	; 255
 884:	8f 4f       	sbci	r24, 0xFF	; 255
 886:	9f 4f       	sbci	r25, 0xFF	; 255
 888:	af 4f       	sbci	r26, 0xFF	; 255
 88a:	b1 e0       	ldi	r27, 0x01	; 1
 88c:	3e d0       	rcall	.+124    	; 0x90a <__stack+0xb>
 88e:	b4 e0       	ldi	r27, 0x04	; 4
 890:	3c d0       	rcall	.+120    	; 0x90a <__stack+0xb>
 892:	67 0f       	add	r22, r23
 894:	78 1f       	adc	r23, r24
 896:	89 1f       	adc	r24, r25
 898:	9a 1f       	adc	r25, r26
 89a:	a1 1d       	adc	r26, r1
 89c:	68 0f       	add	r22, r24
 89e:	79 1f       	adc	r23, r25
 8a0:	8a 1f       	adc	r24, r26
 8a2:	91 1d       	adc	r25, r1
 8a4:	a1 1d       	adc	r26, r1
 8a6:	6a 0f       	add	r22, r26
 8a8:	71 1d       	adc	r23, r1
 8aa:	81 1d       	adc	r24, r1
 8ac:	91 1d       	adc	r25, r1
 8ae:	a1 1d       	adc	r26, r1
 8b0:	20 d0       	rcall	.+64     	; 0x8f2 <__ultoa_invert+0x84>
 8b2:	09 f4       	brne	.+2      	; 0x8b6 <__ultoa_invert+0x48>
 8b4:	68 94       	set
 8b6:	3f 91       	pop	r19
 8b8:	2a e0       	ldi	r18, 0x0A	; 10
 8ba:	26 9f       	mul	r18, r22
 8bc:	11 24       	eor	r1, r1
 8be:	30 19       	sub	r19, r0
 8c0:	30 5d       	subi	r19, 0xD0	; 208
 8c2:	31 93       	st	Z+, r19
 8c4:	de f6       	brtc	.-74     	; 0x87c <__ultoa_invert+0xe>
 8c6:	cf 01       	movw	r24, r30
 8c8:	08 95       	ret
 8ca:	46 2f       	mov	r20, r22
 8cc:	47 70       	andi	r20, 0x07	; 7
 8ce:	40 5d       	subi	r20, 0xD0	; 208
 8d0:	41 93       	st	Z+, r20
 8d2:	b3 e0       	ldi	r27, 0x03	; 3
 8d4:	0f d0       	rcall	.+30     	; 0x8f4 <__ultoa_invert+0x86>
 8d6:	c9 f7       	brne	.-14     	; 0x8ca <__ultoa_invert+0x5c>
 8d8:	f6 cf       	rjmp	.-20     	; 0x8c6 <__ultoa_invert+0x58>
 8da:	46 2f       	mov	r20, r22
 8dc:	4f 70       	andi	r20, 0x0F	; 15
 8de:	40 5d       	subi	r20, 0xD0	; 208
 8e0:	4a 33       	cpi	r20, 0x3A	; 58
 8e2:	18 f0       	brcs	.+6      	; 0x8ea <__ultoa_invert+0x7c>
 8e4:	49 5d       	subi	r20, 0xD9	; 217
 8e6:	31 fd       	sbrc	r19, 1
 8e8:	40 52       	subi	r20, 0x20	; 32
 8ea:	41 93       	st	Z+, r20
 8ec:	02 d0       	rcall	.+4      	; 0x8f2 <__ultoa_invert+0x84>
 8ee:	a9 f7       	brne	.-22     	; 0x8da <__ultoa_invert+0x6c>
 8f0:	ea cf       	rjmp	.-44     	; 0x8c6 <__ultoa_invert+0x58>
 8f2:	b4 e0       	ldi	r27, 0x04	; 4
 8f4:	a6 95       	lsr	r26
 8f6:	97 95       	ror	r25
 8f8:	87 95       	ror	r24
 8fa:	77 95       	ror	r23
 8fc:	67 95       	ror	r22
 8fe:	ba 95       	dec	r27
 900:	c9 f7       	brne	.-14     	; 0x8f4 <__ultoa_invert+0x86>
 902:	00 97       	sbiw	r24, 0x00	; 0
 904:	61 05       	cpc	r22, r1
 906:	71 05       	cpc	r23, r1
 908:	08 95       	ret
 90a:	9b 01       	movw	r18, r22
 90c:	ac 01       	movw	r20, r24
 90e:	0a 2e       	mov	r0, r26
 910:	06 94       	lsr	r0
 912:	57 95       	ror	r21
 914:	47 95       	ror	r20
 916:	37 95       	ror	r19
 918:	27 95       	ror	r18
 91a:	ba 95       	dec	r27
 91c:	c9 f7       	brne	.-14     	; 0x910 <__stack+0x11>
 91e:	62 0f       	add	r22, r18
 920:	73 1f       	adc	r23, r19
 922:	84 1f       	adc	r24, r20
 924:	95 1f       	adc	r25, r21
 926:	a0 1d       	adc	r26, r0
 928:	08 95       	ret

0000092a <__prologue_saves__>:
 92a:	2f 92       	push	r2
 92c:	3f 92       	push	r3
 92e:	4f 92       	push	r4
 930:	5f 92       	push	r5
 932:	6f 92       	push	r6
 934:	7f 92       	push	r7
 936:	8f 92       	push	r8
 938:	9f 92       	push	r9
 93a:	af 92       	push	r10
 93c:	bf 92       	push	r11
 93e:	cf 92       	push	r12
 940:	df 92       	push	r13
 942:	ef 92       	push	r14
 944:	ff 92       	push	r15
 946:	0f 93       	push	r16
 948:	1f 93       	push	r17
 94a:	cf 93       	push	r28
 94c:	df 93       	push	r29
 94e:	cd b7       	in	r28, 0x3d	; 61
 950:	de b7       	in	r29, 0x3e	; 62
 952:	ca 1b       	sub	r28, r26
 954:	db 0b       	sbc	r29, r27
 956:	0f b6       	in	r0, 0x3f	; 63
 958:	f8 94       	cli
 95a:	de bf       	out	0x3e, r29	; 62
 95c:	0f be       	out	0x3f, r0	; 63
 95e:	cd bf       	out	0x3d, r28	; 61
 960:	09 94       	ijmp

00000962 <__epilogue_restores__>:
 962:	2a 88       	ldd	r2, Y+18	; 0x12
 964:	39 88       	ldd	r3, Y+17	; 0x11
 966:	48 88       	ldd	r4, Y+16	; 0x10
 968:	5f 84       	ldd	r5, Y+15	; 0x0f
 96a:	6e 84       	ldd	r6, Y+14	; 0x0e
 96c:	7d 84       	ldd	r7, Y+13	; 0x0d
 96e:	8c 84       	ldd	r8, Y+12	; 0x0c
 970:	9b 84       	ldd	r9, Y+11	; 0x0b
 972:	aa 84       	ldd	r10, Y+10	; 0x0a
 974:	b9 84       	ldd	r11, Y+9	; 0x09
 976:	c8 84       	ldd	r12, Y+8	; 0x08
 978:	df 80       	ldd	r13, Y+7	; 0x07
 97a:	ee 80       	ldd	r14, Y+6	; 0x06
 97c:	fd 80       	ldd	r15, Y+5	; 0x05
 97e:	0c 81       	ldd	r16, Y+4	; 0x04
 980:	1b 81       	ldd	r17, Y+3	; 0x03
 982:	aa 81       	ldd	r26, Y+2	; 0x02
 984:	b9 81       	ldd	r27, Y+1	; 0x01
 986:	ce 0f       	add	r28, r30
 988:	d1 1d       	adc	r29, r1
 98a:	0f b6       	in	r0, 0x3f	; 63
 98c:	f8 94       	cli
 98e:	de bf       	out	0x3e, r29	; 62
 990:	0f be       	out	0x3f, r0	; 63
 992:	cd bf       	out	0x3d, r28	; 61
 994:	ed 01       	movw	r28, r26
 996:	08 95       	ret

00000998 <_exit>:
 998:	f8 94       	cli

0000099a <__stop_program>:
 99a:	ff cf       	rjmp	.-2      	; 0x99a <__stop_program>
