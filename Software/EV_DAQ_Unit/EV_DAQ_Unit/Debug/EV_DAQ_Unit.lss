
EV_DAQ_Unit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000014c  00800100  000009c4  00000a58  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  0080024c  0080024c  00000ba4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ba4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c00  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00000c40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cff  00000000  00000000  00000d80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000074b  00000000  00000000  00001a7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000642  00000000  00000000  000021ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002bc  00000000  00000000  0000280c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003cc  00000000  00000000  00002ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000990  00000000  00000000  00002e94  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00003824  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__vector_11>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	12 e0       	ldi	r17, 0x02	; 2
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e4 ec       	ldi	r30, 0xC4	; 196
  c8:	f9 e0       	ldi	r31, 0x09	; 9
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	ac 34       	cpi	r26, 0x4C	; 76
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	22 e0       	ldi	r18, 0x02	; 2
  d8:	ac e4       	ldi	r26, 0x4C	; 76
  da:	b2 e0       	ldi	r27, 0x02	; 2
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a3 35       	cpi	r26, 0x53	; 83
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 96 00 	call	0x12c	; 0x12c <main>
  ea:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <adc_init>:
* @param[in] adc_dig_disable  Digital input disable mask. ADC7=Bit7, ADC0=Bit0
* @param[in] adc_div          ADC prescalar (clock divider)
* @return void
*/
void adc_init(uint8_t adc_dig_disable, uint8_t adc_div) {
    DIDR0 = adc_dig_disable;    // Disable digital input buffer (saves power and causes PIN to always read 0)
  f2:	80 93 7e 00 	sts	0x007E, r24
  f6:	68 30       	cpi	r22, 0x08	; 8
  f8:	08 f0       	brcs	.+2      	; 0xfc <adc_init+0xa>
  fa:	67 e0       	ldi	r22, 0x07	; 7
    if(adc_div > ADC_DIV_128) {
        adc_div = ADC_DIV_128;    // Handle invalid prescalars by forcing to 128 division 
    }   
         
    ADCSRA = ((1<<ADEN) | (adc_div));   // Enable ADC and set proper prescale
  fc:	60 68       	ori	r22, 0x80	; 128
  fe:	60 93 7a 00 	sts	0x007A, r22
 102:	08 95       	ret

00000104 <i2c1_init>:
* @param[in] cpu_freq   CPU frequency (usually F_CPU) in Hz
* @param[in] i2c_freq   desired I2C frequency in Hz
* @return uint8_t   Division factor
*/
uint8_t i2c_calc_br_div(uint32_t cpu_freq, uint32_t i2c_freq) {
    return((uint8_t)(((cpu_freq/i2c_freq) - 16)>>1));
 104:	0e 94 c3 01 	call	0x386	; 0x386 <__udivmodsi4>
 108:	da 01       	movw	r26, r20
 10a:	c9 01       	movw	r24, r18
 10c:	40 97       	sbiw	r24, 0x10	; 16
 10e:	a1 09       	sbc	r26, r1
 110:	b1 09       	sbc	r27, r1
 112:	b6 95       	lsr	r27
 114:	a7 95       	ror	r26
 116:	97 95       	ror	r25
 118:	87 95       	ror	r24
* @param[in] cpu_freq   CPU frequency (usually F_CPU) in Hz
* @param[in] i2c_freq   desired I2C frequency in Hz
* @return void
*/
void i2c1_init(uint32_t cpu_freq, uint32_t i2c_freq) {
    TWBR1 = i2c_calc_br_div(cpu_freq, i2c_freq);   // Set I2C SCL to correct value
 11a:	80 93 d8 00 	sts	0x00D8, r24
    TWCR1 |= (1<<TWIE); // Enable TWI interrupt
 11e:	ec ed       	ldi	r30, 0xDC	; 220
 120:	f0 e0       	ldi	r31, 0x00	; 0
 122:	80 81       	ld	r24, Z
 124:	81 60       	ori	r24, 0x01	; 1
 126:	80 83       	st	Z, r24
 128:	08 95       	ret

0000012a <lcd_init>:

/*!
* @brief Initialize LCD
* @return void
*/
void lcd_init(void) {
 12a:	08 95       	ret

0000012c <main>:
                                
#define PRINT_SYSTIME(interface)        { fprintf(interface, "\n%d %02d:%02d:%02d:%03d    ", systck_d, systck_h, systck_m, systck_s, systck_ms); }

int main(void) {
    /* Initialization Routines */
    timer1_1ms_init();
 12c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <timer1_1ms_init>
    uart0_init(F_CPU, UART_BAUD);
 130:	20 e0       	ldi	r18, 0x00	; 0
 132:	32 ec       	ldi	r19, 0xC2	; 194
 134:	41 e0       	ldi	r20, 0x01	; 1
 136:	50 e0       	ldi	r21, 0x00	; 0
 138:	60 e0       	ldi	r22, 0x00	; 0
 13a:	74 e2       	ldi	r23, 0x24	; 36
 13c:	84 ef       	ldi	r24, 0xF4	; 244
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 8f 01 	call	0x31e	; 0x31e <uart0_init>
    i2c1_init(F_CPU, I2C_SCL_FREQ);
 144:	20 ea       	ldi	r18, 0xA0	; 160
 146:	36 e8       	ldi	r19, 0x86	; 134
 148:	41 e0       	ldi	r20, 0x01	; 1
 14a:	50 e0       	ldi	r21, 0x00	; 0
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	74 e2       	ldi	r23, 0x24	; 36
 150:	84 ef       	ldi	r24, 0xF4	; 244
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	0e 94 82 00 	call	0x104	; 0x104 <i2c1_init>
    adc_init((ADC_DIG_DIS_LC | ADC_DIG_DIS_HE), ADC_DIV_128);
 158:	67 e0       	ldi	r22, 0x07	; 7
 15a:	87 ec       	ldi	r24, 0xC7	; 199
 15c:	0e 94 79 00 	call	0xf2	; 0xf2 <adc_init>
    lcd_init();
 160:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_init>
    
    PRINT_PROJECT_HEADER(STDIO_UART);
 164:	20 e0       	ldi	r18, 0x00	; 0
 166:	31 e0       	ldi	r19, 0x01	; 1
 168:	4f e2       	ldi	r20, 0x2F	; 47
 16a:	50 e0       	ldi	r21, 0x00	; 0
 16c:	61 e0       	ldi	r22, 0x01	; 1
 16e:	70 e0       	ldi	r23, 0x00	; 0
 170:	8e e0       	ldi	r24, 0x0E	; 14
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	0e 94 f7 01 	call	0x3ee	; 0x3ee <fwrite>
 178:	20 e0       	ldi	r18, 0x00	; 0
 17a:	31 e0       	ldi	r19, 0x01	; 1
 17c:	4f e2       	ldi	r20, 0x2F	; 47
 17e:	50 e0       	ldi	r21, 0x00	; 0
 180:	61 e0       	ldi	r22, 0x01	; 1
 182:	70 e0       	ldi	r23, 0x00	; 0
 184:	8e e3       	ldi	r24, 0x3E	; 62
 186:	91 e0       	ldi	r25, 0x01	; 1
 188:	0e 94 f7 01 	call	0x3ee	; 0x3ee <fwrite>
 18c:	20 e0       	ldi	r18, 0x00	; 0
 18e:	31 e0       	ldi	r19, 0x01	; 1
 190:	4f e2       	ldi	r20, 0x2F	; 47
 192:	50 e0       	ldi	r21, 0x00	; 0
 194:	61 e0       	ldi	r22, 0x01	; 1
 196:	70 e0       	ldi	r23, 0x00	; 0
 198:	8e e6       	ldi	r24, 0x6E	; 110
 19a:	91 e0       	ldi	r25, 0x01	; 1
 19c:	0e 94 f7 01 	call	0x3ee	; 0x3ee <fwrite>
 1a0:	20 e0       	ldi	r18, 0x00	; 0
 1a2:	31 e0       	ldi	r19, 0x01	; 1
 1a4:	4f e2       	ldi	r20, 0x2F	; 47
 1a6:	50 e0       	ldi	r21, 0x00	; 0
 1a8:	61 e0       	ldi	r22, 0x01	; 1
 1aa:	70 e0       	ldi	r23, 0x00	; 0
 1ac:	8e e9       	ldi	r24, 0x9E	; 158
 1ae:	91 e0       	ldi	r25, 0x01	; 1
 1b0:	0e 94 f7 01 	call	0x3ee	; 0x3ee <fwrite>
 1b4:	20 e0       	ldi	r18, 0x00	; 0
 1b6:	31 e0       	ldi	r19, 0x01	; 1
 1b8:	4f e2       	ldi	r20, 0x2F	; 47
 1ba:	50 e0       	ldi	r21, 0x00	; 0
 1bc:	61 e0       	ldi	r22, 0x01	; 1
 1be:	70 e0       	ldi	r23, 0x00	; 0
 1c0:	8e e6       	ldi	r24, 0x6E	; 110
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	0e 94 f7 01 	call	0x3ee	; 0x3ee <fwrite>
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	31 e0       	ldi	r19, 0x01	; 1
 1cc:	4f e2       	ldi	r20, 0x2F	; 47
 1ce:	50 e0       	ldi	r21, 0x00	; 0
 1d0:	61 e0       	ldi	r22, 0x01	; 1
 1d2:	70 e0       	ldi	r23, 0x00	; 0
 1d4:	8e ec       	ldi	r24, 0xCE	; 206
 1d6:	91 e0       	ldi	r25, 0x01	; 1
 1d8:	0e 94 f7 01 	call	0x3ee	; 0x3ee <fwrite>
 1dc:	20 e0       	ldi	r18, 0x00	; 0
 1de:	31 e0       	ldi	r19, 0x01	; 1
 1e0:	40 e3       	ldi	r20, 0x30	; 48
 1e2:	50 e0       	ldi	r21, 0x00	; 0
 1e4:	61 e0       	ldi	r22, 0x01	; 1
 1e6:	70 e0       	ldi	r23, 0x00	; 0
 1e8:	8e ef       	ldi	r24, 0xFE	; 254
 1ea:	91 e0       	ldi	r25, 0x01	; 1
 1ec:	0e 94 f7 01 	call	0x3ee	; 0x3ee <fwrite>
    
    while (1) {
        PRINT_SYSTIME(STDIO_UART);
 1f0:	0f e2       	ldi	r16, 0x2F	; 47
 1f2:	12 e0       	ldi	r17, 0x02	; 2
 1f4:	c0 e0       	ldi	r28, 0x00	; 0
 1f6:	d1 e0       	ldi	r29, 0x01	; 1
 1f8:	80 91 52 02 	lds	r24, 0x0252
 1fc:	8f 93       	push	r24
 1fe:	80 91 51 02 	lds	r24, 0x0251
 202:	8f 93       	push	r24
 204:	80 91 50 02 	lds	r24, 0x0250
 208:	1f 92       	push	r1
 20a:	8f 93       	push	r24
 20c:	80 91 4f 02 	lds	r24, 0x024F
 210:	1f 92       	push	r1
 212:	8f 93       	push	r24
 214:	80 91 4e 02 	lds	r24, 0x024E
 218:	1f 92       	push	r1
 21a:	8f 93       	push	r24
 21c:	80 91 4d 02 	lds	r24, 0x024D
 220:	8f 93       	push	r24
 222:	80 91 4c 02 	lds	r24, 0x024C
 226:	8f 93       	push	r24
 228:	1f 93       	push	r17
 22a:	0f 93       	push	r16
 22c:	df 93       	push	r29
 22e:	cf 93       	push	r28
 230:	0e 94 e5 01 	call	0x3ca	; 0x3ca <fprintf>
    }
 234:	8d b7       	in	r24, 0x3d	; 61
 236:	9e b7       	in	r25, 0x3e	; 62
 238:	0e 96       	adiw	r24, 0x0e	; 14
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	f8 94       	cli
 23e:	9e bf       	out	0x3e, r25	; 62
 240:	0f be       	out	0x3f, r0	; 63
 242:	8d bf       	out	0x3d, r24	; 61
 244:	d9 cf       	rjmp	.-78     	; 0x1f8 <main+0xcc>

00000246 <stdio_uart_put>:
* @param[in] uint8_t ch     Character to write
* @param[in] FILE *stream   Pointer to stream location for stdio
* @return uint8_t
*/
uint8_t stdio_uart_put(uint8_t ch, FILE *stream) {
    uart0_put(ch);
 246:	0e 94 b3 01 	call	0x366	; 0x366 <uart0_put>
    return(0);
}
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	08 95       	ret

0000024e <stdio_uart_get>:
* @brief Read data over UART0 (stdio)
* @param[in] FILE *stream   Pointer to stream location for stdio
* @return uint8_t
*/
uint8_t stdio_uart_get(FILE *stream) {
    uint8_t ch = uart0_get();
 24e:	0e 94 bb 01 	call	0x376	; 0x376 <uart0_get>
    return(ch);
}
 252:	08 95       	ret

00000254 <__vector_11>:
uint8_t systck_s = 0;
uint8_t systck_m = 0;
uint8_t systck_h = 0;
uint16_t systck_d = 0;

ISR(TIMER1_COMPA_vect) {
 254:	1f 92       	push	r1
 256:	0f 92       	push	r0
 258:	0f b6       	in	r0, 0x3f	; 63
 25a:	0f 92       	push	r0
 25c:	11 24       	eor	r1, r1
 25e:	2f 93       	push	r18
 260:	8f 93       	push	r24
 262:	9f 93       	push	r25
    /* Increment systck global vars to keep system time */
    systck_ms++;
 264:	80 91 51 02 	lds	r24, 0x0251
 268:	90 91 52 02 	lds	r25, 0x0252
 26c:	01 96       	adiw	r24, 0x01	; 1
    if(systck_ms >= 1000) {
 26e:	88 3e       	cpi	r24, 0xE8	; 232
 270:	23 e0       	ldi	r18, 0x03	; 3
 272:	92 07       	cpc	r25, r18
 274:	28 f4       	brcc	.+10     	; 0x280 <__vector_11+0x2c>
uint8_t systck_h = 0;
uint16_t systck_d = 0;

ISR(TIMER1_COMPA_vect) {
    /* Increment systck global vars to keep system time */
    systck_ms++;
 276:	90 93 52 02 	sts	0x0252, r25
 27a:	80 93 51 02 	sts	0x0251, r24
 27e:	2b c0       	rjmp	.+86     	; 0x2d6 <__vector_11+0x82>
    if(systck_ms >= 1000) {
        systck_ms = 0;
 280:	10 92 52 02 	sts	0x0252, r1
 284:	10 92 51 02 	sts	0x0251, r1
        systck_s++;
 288:	80 91 50 02 	lds	r24, 0x0250
 28c:	8f 5f       	subi	r24, 0xFF	; 255
        if(systck_s >= 60) {
 28e:	8c 33       	cpi	r24, 0x3C	; 60
 290:	18 f4       	brcc	.+6      	; 0x298 <__vector_11+0x44>
ISR(TIMER1_COMPA_vect) {
    /* Increment systck global vars to keep system time */
    systck_ms++;
    if(systck_ms >= 1000) {
        systck_ms = 0;
        systck_s++;
 292:	80 93 50 02 	sts	0x0250, r24
 296:	1f c0       	rjmp	.+62     	; 0x2d6 <__vector_11+0x82>
        if(systck_s >= 60) {
            systck_s = 0;
 298:	10 92 50 02 	sts	0x0250, r1
            systck_m++;
 29c:	80 91 4f 02 	lds	r24, 0x024F
 2a0:	8f 5f       	subi	r24, 0xFF	; 255
            if(systck_m >= 60) {
 2a2:	8c 33       	cpi	r24, 0x3C	; 60
 2a4:	18 f4       	brcc	.+6      	; 0x2ac <__vector_11+0x58>
    if(systck_ms >= 1000) {
        systck_ms = 0;
        systck_s++;
        if(systck_s >= 60) {
            systck_s = 0;
            systck_m++;
 2a6:	80 93 4f 02 	sts	0x024F, r24
 2aa:	15 c0       	rjmp	.+42     	; 0x2d6 <__vector_11+0x82>
            if(systck_m >= 60) {
                systck_m = 0;
 2ac:	10 92 4f 02 	sts	0x024F, r1
                systck_h++;
 2b0:	80 91 4e 02 	lds	r24, 0x024E
 2b4:	8f 5f       	subi	r24, 0xFF	; 255
                if(systck_h >= 24) {
 2b6:	88 31       	cpi	r24, 0x18	; 24
 2b8:	18 f4       	brcc	.+6      	; 0x2c0 <__vector_11+0x6c>
        if(systck_s >= 60) {
            systck_s = 0;
            systck_m++;
            if(systck_m >= 60) {
                systck_m = 0;
                systck_h++;
 2ba:	80 93 4e 02 	sts	0x024E, r24
 2be:	0b c0       	rjmp	.+22     	; 0x2d6 <__vector_11+0x82>
                if(systck_h >= 24) {
                    systck_h = 0;
 2c0:	10 92 4e 02 	sts	0x024E, r1
                    systck_d++;                    
 2c4:	80 91 4c 02 	lds	r24, 0x024C
 2c8:	90 91 4d 02 	lds	r25, 0x024D
 2cc:	01 96       	adiw	r24, 0x01	; 1
 2ce:	90 93 4d 02 	sts	0x024D, r25
 2d2:	80 93 4c 02 	sts	0x024C, r24
                }
            }
        }        
    }
}
 2d6:	9f 91       	pop	r25
 2d8:	8f 91       	pop	r24
 2da:	2f 91       	pop	r18
 2dc:	0f 90       	pop	r0
 2de:	0f be       	out	0x3f, r0	; 63
 2e0:	0f 90       	pop	r0
 2e2:	1f 90       	pop	r1
 2e4:	18 95       	reti

000002e6 <timer1_1ms_init>:
/*!
* @brief Disable timer1 and timer1 interrupts
* @return void
*/
inline void timer1_disable(void) {
    TIMSK1 &= ~(1<<OCIE1A); // Disable Output compare Interrupt on Match A
 2e6:	af e6       	ldi	r26, 0x6F	; 111
 2e8:	b0 e0       	ldi	r27, 0x00	; 0
 2ea:	8c 91       	ld	r24, X
 2ec:	8d 7f       	andi	r24, 0xFD	; 253
 2ee:	8c 93       	st	X, r24
    TCCR1B &= ~((1<<CS12) | (1<<CS11) | (1<<CS10)); // Disable timer1 clock source (disables timer)
 2f0:	e1 e8       	ldi	r30, 0x81	; 129
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	80 81       	ld	r24, Z
 2f6:	88 7f       	andi	r24, 0xF8	; 248
 2f8:	80 83       	st	Z, r24
*/
void timer1_1ms_init(void) {
    static uint16_t timer1_1ms_compare_value = 250-1;
        
    timer1_disable();
    TCCR1A = 0x00;  // Make sure no pins are set to output
 2fa:	10 92 80 00 	sts	0x0080, r1
    TCCR1B |= (1<<WGM12) | TIMER1_PRESCALE_MASK;  // Set CTC, prescalar to clk(io)/64 (250 counts per 1ms)
 2fe:	80 81       	ld	r24, Z
 300:	8b 60       	ori	r24, 0x0B	; 11
 302:	80 83       	st	Z, r24
    OCR1A = timer1_1ms_compare_value;    
 304:	89 ef       	ldi	r24, 0xF9	; 249
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	90 93 89 00 	sts	0x0089, r25
 30c:	80 93 88 00 	sts	0x0088, r24
/*!
* @brief Enable timer1 and timer1 interrupts
* @return void
*/
inline void timer1_enable(void) {
    TIMSK1 |= (1<<OCIE1A);  // Enable Output Compare Interrupt on Match A
 310:	8c 91       	ld	r24, X
 312:	82 60       	ori	r24, 0x02	; 2
 314:	8c 93       	st	X, r24
    TCCR1B |= TIMER1_PRESCALE_MASK; // Enable timer1 clock source (disables timer)
 316:	80 81       	ld	r24, Z
 318:	83 60       	ori	r24, 0x03	; 3
 31a:	80 83       	st	Z, r24
 31c:	08 95       	ret

0000031e <uart0_init>:
* @return void
*/
void uart0_init(uint32_t cpu_freq, uint32_t uart_baud) {    
    // Set UART0 to no parity, 8 data bits, 1 stop bit
    // Enable Tx & Rx UART
    UCSR0A = 0x00;
 31e:	10 92 c0 00 	sts	0x00C0, r1
    UCSR0B = 0x18;
 322:	e8 e1       	ldi	r30, 0x18	; 24
 324:	e0 93 c1 00 	sts	0x00C1, r30
    UCSR0C = 0x06;
 328:	e6 e0       	ldi	r30, 0x06	; 6
 32a:	e0 93 c2 00 	sts	0x00C2, r30
    
    // Set UART0 Baud Rate
    UBRR0H = (((cpu_freq/uart_baud)/32)-1)>>8;  // Set baud rate div (upper register)
 32e:	0e 94 c3 01 	call	0x386	; 0x386 <__udivmodsi4>
 332:	ba 01       	movw	r22, r20
 334:	a9 01       	movw	r20, r18
 336:	68 94       	set
 338:	14 f8       	bld	r1, 4
 33a:	76 95       	lsr	r23
 33c:	67 95       	ror	r22
 33e:	57 95       	ror	r21
 340:	47 95       	ror	r20
 342:	16 94       	lsr	r1
 344:	d1 f7       	brne	.-12     	; 0x33a <uart0_init+0x1c>
 346:	db 01       	movw	r26, r22
 348:	ca 01       	movw	r24, r20
 34a:	01 97       	sbiw	r24, 0x01	; 1
 34c:	a1 09       	sbc	r26, r1
 34e:	b1 09       	sbc	r27, r1
 350:	89 2f       	mov	r24, r25
 352:	9a 2f       	mov	r25, r26
 354:	ab 2f       	mov	r26, r27
 356:	bb 27       	eor	r27, r27
 358:	80 93 c5 00 	sts	0x00C5, r24
    UBRR0L = (((cpu_freq/uart_baud)/32)-1);     // Set baud rate div (lower register)   
 35c:	2f ef       	ldi	r18, 0xFF	; 255
 35e:	24 0f       	add	r18, r20
 360:	20 93 c4 00 	sts	0x00C4, r18
 364:	08 95       	ret

00000366 <uart0_put>:
* @brief Write byte over UART0
* @param[in] uint8_t ch     Byte to write
* @return void
*/
void uart0_put(uint8_t ch) {
    while((UCSR0A & (1<<UDRE0)) == 0x00);    // Wait until tx buffer is empty
 366:	e0 ec       	ldi	r30, 0xC0	; 192
 368:	f0 e0       	ldi	r31, 0x00	; 0
 36a:	90 81       	ld	r25, Z
 36c:	95 ff       	sbrs	r25, 5
 36e:	fd cf       	rjmp	.-6      	; 0x36a <uart0_put+0x4>
    UDR0 = ch;      // Load tx buffer with character to send
 370:	80 93 c6 00 	sts	0x00C6, r24
 374:	08 95       	ret

00000376 <uart0_get>:
/*!
* @brief Get uint8_t over UART0
* @return uint8_t   Value from UART0
*/
uint8_t uart0_get(void) {
    while((UCSR0A & (1<<RXC0)) == 0x00);    // Wait until rx char flag is set
 376:	e0 ec       	ldi	r30, 0xC0	; 192
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	80 81       	ld	r24, Z
 37c:	88 23       	and	r24, r24
 37e:	ec f7       	brge	.-6      	; 0x37a <uart0_get+0x4>
    return(UDR0);    
 380:	80 91 c6 00 	lds	r24, 0x00C6
}
 384:	08 95       	ret

00000386 <__udivmodsi4>:
 386:	a1 e2       	ldi	r26, 0x21	; 33
 388:	1a 2e       	mov	r1, r26
 38a:	aa 1b       	sub	r26, r26
 38c:	bb 1b       	sub	r27, r27
 38e:	fd 01       	movw	r30, r26
 390:	0d c0       	rjmp	.+26     	; 0x3ac <__udivmodsi4_ep>

00000392 <__udivmodsi4_loop>:
 392:	aa 1f       	adc	r26, r26
 394:	bb 1f       	adc	r27, r27
 396:	ee 1f       	adc	r30, r30
 398:	ff 1f       	adc	r31, r31
 39a:	a2 17       	cp	r26, r18
 39c:	b3 07       	cpc	r27, r19
 39e:	e4 07       	cpc	r30, r20
 3a0:	f5 07       	cpc	r31, r21
 3a2:	20 f0       	brcs	.+8      	; 0x3ac <__udivmodsi4_ep>
 3a4:	a2 1b       	sub	r26, r18
 3a6:	b3 0b       	sbc	r27, r19
 3a8:	e4 0b       	sbc	r30, r20
 3aa:	f5 0b       	sbc	r31, r21

000003ac <__udivmodsi4_ep>:
 3ac:	66 1f       	adc	r22, r22
 3ae:	77 1f       	adc	r23, r23
 3b0:	88 1f       	adc	r24, r24
 3b2:	99 1f       	adc	r25, r25
 3b4:	1a 94       	dec	r1
 3b6:	69 f7       	brne	.-38     	; 0x392 <__udivmodsi4_loop>
 3b8:	60 95       	com	r22
 3ba:	70 95       	com	r23
 3bc:	80 95       	com	r24
 3be:	90 95       	com	r25
 3c0:	9b 01       	movw	r18, r22
 3c2:	ac 01       	movw	r20, r24
 3c4:	bd 01       	movw	r22, r26
 3c6:	cf 01       	movw	r24, r30
 3c8:	08 95       	ret

000003ca <fprintf>:
 3ca:	a0 e0       	ldi	r26, 0x00	; 0
 3cc:	b0 e0       	ldi	r27, 0x00	; 0
 3ce:	eb ee       	ldi	r30, 0xEB	; 235
 3d0:	f1 e0       	ldi	r31, 0x01	; 1
 3d2:	0c 94 b9 04 	jmp	0x972	; 0x972 <__prologue_saves__+0x20>
 3d6:	ae 01       	movw	r20, r28
 3d8:	47 5f       	subi	r20, 0xF7	; 247
 3da:	5f 4f       	sbci	r21, 0xFF	; 255
 3dc:	6f 81       	ldd	r22, Y+7	; 0x07
 3de:	78 85       	ldd	r23, Y+8	; 0x08
 3e0:	8d 81       	ldd	r24, Y+5	; 0x05
 3e2:	9e 81       	ldd	r25, Y+6	; 0x06
 3e4:	0e 94 2b 02 	call	0x456	; 0x456 <vfprintf>
 3e8:	e2 e0       	ldi	r30, 0x02	; 2
 3ea:	0c 94 d5 04 	jmp	0x9aa	; 0x9aa <__epilogue_restores__+0x20>

000003ee <fwrite>:
 3ee:	a0 e0       	ldi	r26, 0x00	; 0
 3f0:	b0 e0       	ldi	r27, 0x00	; 0
 3f2:	ed ef       	ldi	r30, 0xFD	; 253
 3f4:	f1 e0       	ldi	r31, 0x01	; 1
 3f6:	0c 94 af 04 	jmp	0x95e	; 0x95e <__prologue_saves__+0xc>
 3fa:	5b 01       	movw	r10, r22
 3fc:	4a 01       	movw	r8, r20
 3fe:	79 01       	movw	r14, r18
 400:	d9 01       	movw	r26, r18
 402:	13 96       	adiw	r26, 0x03	; 3
 404:	2c 91       	ld	r18, X
 406:	21 ff       	sbrs	r18, 1
 408:	1d c0       	rjmp	.+58     	; 0x444 <fwrite+0x56>
 40a:	c0 e0       	ldi	r28, 0x00	; 0
 40c:	d0 e0       	ldi	r29, 0x00	; 0
 40e:	c8 15       	cp	r28, r8
 410:	d9 05       	cpc	r29, r9
 412:	d9 f0       	breq	.+54     	; 0x44a <fwrite+0x5c>
 414:	8c 01       	movw	r16, r24
 416:	6c 01       	movw	r12, r24
 418:	ca 0c       	add	r12, r10
 41a:	db 1c       	adc	r13, r11
 41c:	c8 01       	movw	r24, r16
 41e:	0c 15       	cp	r16, r12
 420:	1d 05       	cpc	r17, r13
 422:	71 f0       	breq	.+28     	; 0x440 <fwrite+0x52>
 424:	0f 5f       	subi	r16, 0xFF	; 255
 426:	1f 4f       	sbci	r17, 0xFF	; 255
 428:	d7 01       	movw	r26, r14
 42a:	18 96       	adiw	r26, 0x08	; 8
 42c:	ed 91       	ld	r30, X+
 42e:	fc 91       	ld	r31, X
 430:	19 97       	sbiw	r26, 0x09	; 9
 432:	b7 01       	movw	r22, r14
 434:	dc 01       	movw	r26, r24
 436:	8c 91       	ld	r24, X
 438:	09 95       	icall
 43a:	89 2b       	or	r24, r25
 43c:	79 f3       	breq	.-34     	; 0x41c <fwrite+0x2e>
 43e:	05 c0       	rjmp	.+10     	; 0x44a <fwrite+0x5c>
 440:	21 96       	adiw	r28, 0x01	; 1
 442:	e5 cf       	rjmp	.-54     	; 0x40e <fwrite+0x20>
 444:	80 e0       	ldi	r24, 0x00	; 0
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	01 c0       	rjmp	.+2      	; 0x44c <fwrite+0x5e>
 44a:	ce 01       	movw	r24, r28
 44c:	cd b7       	in	r28, 0x3d	; 61
 44e:	de b7       	in	r29, 0x3e	; 62
 450:	ec e0       	ldi	r30, 0x0C	; 12
 452:	0c 94 cb 04 	jmp	0x996	; 0x996 <__epilogue_restores__+0xc>

00000456 <vfprintf>:
 456:	ac e0       	ldi	r26, 0x0C	; 12
 458:	b0 e0       	ldi	r27, 0x00	; 0
 45a:	e1 e3       	ldi	r30, 0x31	; 49
 45c:	f2 e0       	ldi	r31, 0x02	; 2
 45e:	0c 94 a9 04 	jmp	0x952	; 0x952 <__prologue_saves__>
 462:	7c 01       	movw	r14, r24
 464:	6b 01       	movw	r12, r22
 466:	8a 01       	movw	r16, r20
 468:	fc 01       	movw	r30, r24
 46a:	17 82       	std	Z+7, r1	; 0x07
 46c:	16 82       	std	Z+6, r1	; 0x06
 46e:	83 81       	ldd	r24, Z+3	; 0x03
 470:	81 ff       	sbrs	r24, 1
 472:	bd c1       	rjmp	.+890    	; 0x7ee <vfprintf+0x398>
 474:	ce 01       	movw	r24, r28
 476:	01 96       	adiw	r24, 0x01	; 1
 478:	4c 01       	movw	r8, r24
 47a:	f7 01       	movw	r30, r14
 47c:	93 81       	ldd	r25, Z+3	; 0x03
 47e:	f6 01       	movw	r30, r12
 480:	93 fd       	sbrc	r25, 3
 482:	85 91       	lpm	r24, Z+
 484:	93 ff       	sbrs	r25, 3
 486:	81 91       	ld	r24, Z+
 488:	6f 01       	movw	r12, r30
 48a:	88 23       	and	r24, r24
 48c:	09 f4       	brne	.+2      	; 0x490 <vfprintf+0x3a>
 48e:	ab c1       	rjmp	.+854    	; 0x7e6 <vfprintf+0x390>
 490:	85 32       	cpi	r24, 0x25	; 37
 492:	39 f4       	brne	.+14     	; 0x4a2 <vfprintf+0x4c>
 494:	93 fd       	sbrc	r25, 3
 496:	85 91       	lpm	r24, Z+
 498:	93 ff       	sbrs	r25, 3
 49a:	81 91       	ld	r24, Z+
 49c:	6f 01       	movw	r12, r30
 49e:	85 32       	cpi	r24, 0x25	; 37
 4a0:	29 f4       	brne	.+10     	; 0x4ac <vfprintf+0x56>
 4a2:	b7 01       	movw	r22, r14
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	0e 94 13 04 	call	0x826	; 0x826 <fputc>
 4aa:	e7 cf       	rjmp	.-50     	; 0x47a <vfprintf+0x24>
 4ac:	51 2c       	mov	r5, r1
 4ae:	31 2c       	mov	r3, r1
 4b0:	20 e0       	ldi	r18, 0x00	; 0
 4b2:	20 32       	cpi	r18, 0x20	; 32
 4b4:	a0 f4       	brcc	.+40     	; 0x4de <vfprintf+0x88>
 4b6:	8b 32       	cpi	r24, 0x2B	; 43
 4b8:	69 f0       	breq	.+26     	; 0x4d4 <vfprintf+0x7e>
 4ba:	30 f4       	brcc	.+12     	; 0x4c8 <vfprintf+0x72>
 4bc:	80 32       	cpi	r24, 0x20	; 32
 4be:	59 f0       	breq	.+22     	; 0x4d6 <vfprintf+0x80>
 4c0:	83 32       	cpi	r24, 0x23	; 35
 4c2:	69 f4       	brne	.+26     	; 0x4de <vfprintf+0x88>
 4c4:	20 61       	ori	r18, 0x10	; 16
 4c6:	2c c0       	rjmp	.+88     	; 0x520 <vfprintf+0xca>
 4c8:	8d 32       	cpi	r24, 0x2D	; 45
 4ca:	39 f0       	breq	.+14     	; 0x4da <vfprintf+0x84>
 4cc:	80 33       	cpi	r24, 0x30	; 48
 4ce:	39 f4       	brne	.+14     	; 0x4de <vfprintf+0x88>
 4d0:	21 60       	ori	r18, 0x01	; 1
 4d2:	26 c0       	rjmp	.+76     	; 0x520 <vfprintf+0xca>
 4d4:	22 60       	ori	r18, 0x02	; 2
 4d6:	24 60       	ori	r18, 0x04	; 4
 4d8:	23 c0       	rjmp	.+70     	; 0x520 <vfprintf+0xca>
 4da:	28 60       	ori	r18, 0x08	; 8
 4dc:	21 c0       	rjmp	.+66     	; 0x520 <vfprintf+0xca>
 4de:	27 fd       	sbrc	r18, 7
 4e0:	27 c0       	rjmp	.+78     	; 0x530 <vfprintf+0xda>
 4e2:	30 ed       	ldi	r19, 0xD0	; 208
 4e4:	38 0f       	add	r19, r24
 4e6:	3a 30       	cpi	r19, 0x0A	; 10
 4e8:	78 f4       	brcc	.+30     	; 0x508 <vfprintf+0xb2>
 4ea:	26 ff       	sbrs	r18, 6
 4ec:	06 c0       	rjmp	.+12     	; 0x4fa <vfprintf+0xa4>
 4ee:	fa e0       	ldi	r31, 0x0A	; 10
 4f0:	5f 9e       	mul	r5, r31
 4f2:	30 0d       	add	r19, r0
 4f4:	11 24       	eor	r1, r1
 4f6:	53 2e       	mov	r5, r19
 4f8:	13 c0       	rjmp	.+38     	; 0x520 <vfprintf+0xca>
 4fa:	8a e0       	ldi	r24, 0x0A	; 10
 4fc:	38 9e       	mul	r3, r24
 4fe:	30 0d       	add	r19, r0
 500:	11 24       	eor	r1, r1
 502:	33 2e       	mov	r3, r19
 504:	20 62       	ori	r18, 0x20	; 32
 506:	0c c0       	rjmp	.+24     	; 0x520 <vfprintf+0xca>
 508:	8e 32       	cpi	r24, 0x2E	; 46
 50a:	21 f4       	brne	.+8      	; 0x514 <vfprintf+0xbe>
 50c:	26 fd       	sbrc	r18, 6
 50e:	6b c1       	rjmp	.+726    	; 0x7e6 <vfprintf+0x390>
 510:	20 64       	ori	r18, 0x40	; 64
 512:	06 c0       	rjmp	.+12     	; 0x520 <vfprintf+0xca>
 514:	8c 36       	cpi	r24, 0x6C	; 108
 516:	11 f4       	brne	.+4      	; 0x51c <vfprintf+0xc6>
 518:	20 68       	ori	r18, 0x80	; 128
 51a:	02 c0       	rjmp	.+4      	; 0x520 <vfprintf+0xca>
 51c:	88 36       	cpi	r24, 0x68	; 104
 51e:	41 f4       	brne	.+16     	; 0x530 <vfprintf+0xda>
 520:	f6 01       	movw	r30, r12
 522:	93 fd       	sbrc	r25, 3
 524:	85 91       	lpm	r24, Z+
 526:	93 ff       	sbrs	r25, 3
 528:	81 91       	ld	r24, Z+
 52a:	6f 01       	movw	r12, r30
 52c:	81 11       	cpse	r24, r1
 52e:	c1 cf       	rjmp	.-126    	; 0x4b2 <vfprintf+0x5c>
 530:	98 2f       	mov	r25, r24
 532:	9f 7d       	andi	r25, 0xDF	; 223
 534:	95 54       	subi	r25, 0x45	; 69
 536:	93 30       	cpi	r25, 0x03	; 3
 538:	28 f4       	brcc	.+10     	; 0x544 <vfprintf+0xee>
 53a:	0c 5f       	subi	r16, 0xFC	; 252
 53c:	1f 4f       	sbci	r17, 0xFF	; 255
 53e:	ff e3       	ldi	r31, 0x3F	; 63
 540:	f9 83       	std	Y+1, r31	; 0x01
 542:	0d c0       	rjmp	.+26     	; 0x55e <vfprintf+0x108>
 544:	83 36       	cpi	r24, 0x63	; 99
 546:	31 f0       	breq	.+12     	; 0x554 <vfprintf+0xfe>
 548:	83 37       	cpi	r24, 0x73	; 115
 54a:	71 f0       	breq	.+28     	; 0x568 <vfprintf+0x112>
 54c:	83 35       	cpi	r24, 0x53	; 83
 54e:	09 f0       	breq	.+2      	; 0x552 <vfprintf+0xfc>
 550:	5b c0       	rjmp	.+182    	; 0x608 <vfprintf+0x1b2>
 552:	22 c0       	rjmp	.+68     	; 0x598 <vfprintf+0x142>
 554:	f8 01       	movw	r30, r16
 556:	80 81       	ld	r24, Z
 558:	89 83       	std	Y+1, r24	; 0x01
 55a:	0e 5f       	subi	r16, 0xFE	; 254
 55c:	1f 4f       	sbci	r17, 0xFF	; 255
 55e:	44 24       	eor	r4, r4
 560:	43 94       	inc	r4
 562:	51 2c       	mov	r5, r1
 564:	54 01       	movw	r10, r8
 566:	15 c0       	rjmp	.+42     	; 0x592 <vfprintf+0x13c>
 568:	38 01       	movw	r6, r16
 56a:	f2 e0       	ldi	r31, 0x02	; 2
 56c:	6f 0e       	add	r6, r31
 56e:	71 1c       	adc	r7, r1
 570:	f8 01       	movw	r30, r16
 572:	a0 80       	ld	r10, Z
 574:	b1 80       	ldd	r11, Z+1	; 0x01
 576:	26 ff       	sbrs	r18, 6
 578:	03 c0       	rjmp	.+6      	; 0x580 <vfprintf+0x12a>
 57a:	65 2d       	mov	r22, r5
 57c:	70 e0       	ldi	r23, 0x00	; 0
 57e:	02 c0       	rjmp	.+4      	; 0x584 <vfprintf+0x12e>
 580:	6f ef       	ldi	r22, 0xFF	; 255
 582:	7f ef       	ldi	r23, 0xFF	; 255
 584:	c5 01       	movw	r24, r10
 586:	2c 87       	std	Y+12, r18	; 0x0c
 588:	0e 94 08 04 	call	0x810	; 0x810 <strnlen>
 58c:	2c 01       	movw	r4, r24
 58e:	83 01       	movw	r16, r6
 590:	2c 85       	ldd	r18, Y+12	; 0x0c
 592:	2f 77       	andi	r18, 0x7F	; 127
 594:	22 2e       	mov	r2, r18
 596:	17 c0       	rjmp	.+46     	; 0x5c6 <vfprintf+0x170>
 598:	38 01       	movw	r6, r16
 59a:	f2 e0       	ldi	r31, 0x02	; 2
 59c:	6f 0e       	add	r6, r31
 59e:	71 1c       	adc	r7, r1
 5a0:	f8 01       	movw	r30, r16
 5a2:	a0 80       	ld	r10, Z
 5a4:	b1 80       	ldd	r11, Z+1	; 0x01
 5a6:	26 ff       	sbrs	r18, 6
 5a8:	03 c0       	rjmp	.+6      	; 0x5b0 <vfprintf+0x15a>
 5aa:	65 2d       	mov	r22, r5
 5ac:	70 e0       	ldi	r23, 0x00	; 0
 5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <vfprintf+0x15e>
 5b0:	6f ef       	ldi	r22, 0xFF	; 255
 5b2:	7f ef       	ldi	r23, 0xFF	; 255
 5b4:	c5 01       	movw	r24, r10
 5b6:	2c 87       	std	Y+12, r18	; 0x0c
 5b8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <strnlen_P>
 5bc:	2c 01       	movw	r4, r24
 5be:	2c 85       	ldd	r18, Y+12	; 0x0c
 5c0:	20 68       	ori	r18, 0x80	; 128
 5c2:	22 2e       	mov	r2, r18
 5c4:	83 01       	movw	r16, r6
 5c6:	23 fc       	sbrc	r2, 3
 5c8:	1b c0       	rjmp	.+54     	; 0x600 <vfprintf+0x1aa>
 5ca:	83 2d       	mov	r24, r3
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	48 16       	cp	r4, r24
 5d0:	59 06       	cpc	r5, r25
 5d2:	b0 f4       	brcc	.+44     	; 0x600 <vfprintf+0x1aa>
 5d4:	b7 01       	movw	r22, r14
 5d6:	80 e2       	ldi	r24, 0x20	; 32
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 94 13 04 	call	0x826	; 0x826 <fputc>
 5de:	3a 94       	dec	r3
 5e0:	f4 cf       	rjmp	.-24     	; 0x5ca <vfprintf+0x174>
 5e2:	f5 01       	movw	r30, r10
 5e4:	27 fc       	sbrc	r2, 7
 5e6:	85 91       	lpm	r24, Z+
 5e8:	27 fe       	sbrs	r2, 7
 5ea:	81 91       	ld	r24, Z+
 5ec:	5f 01       	movw	r10, r30
 5ee:	b7 01       	movw	r22, r14
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 13 04 	call	0x826	; 0x826 <fputc>
 5f6:	31 10       	cpse	r3, r1
 5f8:	3a 94       	dec	r3
 5fa:	f1 e0       	ldi	r31, 0x01	; 1
 5fc:	4f 1a       	sub	r4, r31
 5fe:	51 08       	sbc	r5, r1
 600:	41 14       	cp	r4, r1
 602:	51 04       	cpc	r5, r1
 604:	71 f7       	brne	.-36     	; 0x5e2 <vfprintf+0x18c>
 606:	e5 c0       	rjmp	.+458    	; 0x7d2 <vfprintf+0x37c>
 608:	84 36       	cpi	r24, 0x64	; 100
 60a:	11 f0       	breq	.+4      	; 0x610 <vfprintf+0x1ba>
 60c:	89 36       	cpi	r24, 0x69	; 105
 60e:	39 f5       	brne	.+78     	; 0x65e <vfprintf+0x208>
 610:	f8 01       	movw	r30, r16
 612:	27 ff       	sbrs	r18, 7
 614:	07 c0       	rjmp	.+14     	; 0x624 <vfprintf+0x1ce>
 616:	60 81       	ld	r22, Z
 618:	71 81       	ldd	r23, Z+1	; 0x01
 61a:	82 81       	ldd	r24, Z+2	; 0x02
 61c:	93 81       	ldd	r25, Z+3	; 0x03
 61e:	0c 5f       	subi	r16, 0xFC	; 252
 620:	1f 4f       	sbci	r17, 0xFF	; 255
 622:	08 c0       	rjmp	.+16     	; 0x634 <vfprintf+0x1de>
 624:	60 81       	ld	r22, Z
 626:	71 81       	ldd	r23, Z+1	; 0x01
 628:	07 2e       	mov	r0, r23
 62a:	00 0c       	add	r0, r0
 62c:	88 0b       	sbc	r24, r24
 62e:	99 0b       	sbc	r25, r25
 630:	0e 5f       	subi	r16, 0xFE	; 254
 632:	1f 4f       	sbci	r17, 0xFF	; 255
 634:	2f 76       	andi	r18, 0x6F	; 111
 636:	72 2e       	mov	r7, r18
 638:	97 ff       	sbrs	r25, 7
 63a:	09 c0       	rjmp	.+18     	; 0x64e <vfprintf+0x1f8>
 63c:	90 95       	com	r25
 63e:	80 95       	com	r24
 640:	70 95       	com	r23
 642:	61 95       	neg	r22
 644:	7f 4f       	sbci	r23, 0xFF	; 255
 646:	8f 4f       	sbci	r24, 0xFF	; 255
 648:	9f 4f       	sbci	r25, 0xFF	; 255
 64a:	20 68       	ori	r18, 0x80	; 128
 64c:	72 2e       	mov	r7, r18
 64e:	2a e0       	ldi	r18, 0x0A	; 10
 650:	30 e0       	ldi	r19, 0x00	; 0
 652:	a4 01       	movw	r20, r8
 654:	0e 94 4b 04 	call	0x896	; 0x896 <__ultoa_invert>
 658:	a8 2e       	mov	r10, r24
 65a:	a8 18       	sub	r10, r8
 65c:	44 c0       	rjmp	.+136    	; 0x6e6 <vfprintf+0x290>
 65e:	85 37       	cpi	r24, 0x75	; 117
 660:	29 f4       	brne	.+10     	; 0x66c <vfprintf+0x216>
 662:	2f 7e       	andi	r18, 0xEF	; 239
 664:	b2 2e       	mov	r11, r18
 666:	2a e0       	ldi	r18, 0x0A	; 10
 668:	30 e0       	ldi	r19, 0x00	; 0
 66a:	25 c0       	rjmp	.+74     	; 0x6b6 <vfprintf+0x260>
 66c:	f2 2f       	mov	r31, r18
 66e:	f9 7f       	andi	r31, 0xF9	; 249
 670:	bf 2e       	mov	r11, r31
 672:	8f 36       	cpi	r24, 0x6F	; 111
 674:	c1 f0       	breq	.+48     	; 0x6a6 <vfprintf+0x250>
 676:	18 f4       	brcc	.+6      	; 0x67e <vfprintf+0x228>
 678:	88 35       	cpi	r24, 0x58	; 88
 67a:	79 f0       	breq	.+30     	; 0x69a <vfprintf+0x244>
 67c:	b4 c0       	rjmp	.+360    	; 0x7e6 <vfprintf+0x390>
 67e:	80 37       	cpi	r24, 0x70	; 112
 680:	19 f0       	breq	.+6      	; 0x688 <vfprintf+0x232>
 682:	88 37       	cpi	r24, 0x78	; 120
 684:	21 f0       	breq	.+8      	; 0x68e <vfprintf+0x238>
 686:	af c0       	rjmp	.+350    	; 0x7e6 <vfprintf+0x390>
 688:	2f 2f       	mov	r18, r31
 68a:	20 61       	ori	r18, 0x10	; 16
 68c:	b2 2e       	mov	r11, r18
 68e:	b4 fe       	sbrs	r11, 4
 690:	0d c0       	rjmp	.+26     	; 0x6ac <vfprintf+0x256>
 692:	8b 2d       	mov	r24, r11
 694:	84 60       	ori	r24, 0x04	; 4
 696:	b8 2e       	mov	r11, r24
 698:	09 c0       	rjmp	.+18     	; 0x6ac <vfprintf+0x256>
 69a:	24 ff       	sbrs	r18, 4
 69c:	0a c0       	rjmp	.+20     	; 0x6b2 <vfprintf+0x25c>
 69e:	9f 2f       	mov	r25, r31
 6a0:	96 60       	ori	r25, 0x06	; 6
 6a2:	b9 2e       	mov	r11, r25
 6a4:	06 c0       	rjmp	.+12     	; 0x6b2 <vfprintf+0x25c>
 6a6:	28 e0       	ldi	r18, 0x08	; 8
 6a8:	30 e0       	ldi	r19, 0x00	; 0
 6aa:	05 c0       	rjmp	.+10     	; 0x6b6 <vfprintf+0x260>
 6ac:	20 e1       	ldi	r18, 0x10	; 16
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <vfprintf+0x260>
 6b2:	20 e1       	ldi	r18, 0x10	; 16
 6b4:	32 e0       	ldi	r19, 0x02	; 2
 6b6:	f8 01       	movw	r30, r16
 6b8:	b7 fe       	sbrs	r11, 7
 6ba:	07 c0       	rjmp	.+14     	; 0x6ca <vfprintf+0x274>
 6bc:	60 81       	ld	r22, Z
 6be:	71 81       	ldd	r23, Z+1	; 0x01
 6c0:	82 81       	ldd	r24, Z+2	; 0x02
 6c2:	93 81       	ldd	r25, Z+3	; 0x03
 6c4:	0c 5f       	subi	r16, 0xFC	; 252
 6c6:	1f 4f       	sbci	r17, 0xFF	; 255
 6c8:	06 c0       	rjmp	.+12     	; 0x6d6 <vfprintf+0x280>
 6ca:	60 81       	ld	r22, Z
 6cc:	71 81       	ldd	r23, Z+1	; 0x01
 6ce:	80 e0       	ldi	r24, 0x00	; 0
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	0e 5f       	subi	r16, 0xFE	; 254
 6d4:	1f 4f       	sbci	r17, 0xFF	; 255
 6d6:	a4 01       	movw	r20, r8
 6d8:	0e 94 4b 04 	call	0x896	; 0x896 <__ultoa_invert>
 6dc:	a8 2e       	mov	r10, r24
 6de:	a8 18       	sub	r10, r8
 6e0:	fb 2d       	mov	r31, r11
 6e2:	ff 77       	andi	r31, 0x7F	; 127
 6e4:	7f 2e       	mov	r7, r31
 6e6:	76 fe       	sbrs	r7, 6
 6e8:	0b c0       	rjmp	.+22     	; 0x700 <vfprintf+0x2aa>
 6ea:	37 2d       	mov	r19, r7
 6ec:	3e 7f       	andi	r19, 0xFE	; 254
 6ee:	a5 14       	cp	r10, r5
 6f0:	50 f4       	brcc	.+20     	; 0x706 <vfprintf+0x2b0>
 6f2:	74 fe       	sbrs	r7, 4
 6f4:	0a c0       	rjmp	.+20     	; 0x70a <vfprintf+0x2b4>
 6f6:	72 fc       	sbrc	r7, 2
 6f8:	08 c0       	rjmp	.+16     	; 0x70a <vfprintf+0x2b4>
 6fa:	37 2d       	mov	r19, r7
 6fc:	3e 7e       	andi	r19, 0xEE	; 238
 6fe:	05 c0       	rjmp	.+10     	; 0x70a <vfprintf+0x2b4>
 700:	ba 2c       	mov	r11, r10
 702:	37 2d       	mov	r19, r7
 704:	03 c0       	rjmp	.+6      	; 0x70c <vfprintf+0x2b6>
 706:	ba 2c       	mov	r11, r10
 708:	01 c0       	rjmp	.+2      	; 0x70c <vfprintf+0x2b6>
 70a:	b5 2c       	mov	r11, r5
 70c:	34 ff       	sbrs	r19, 4
 70e:	0d c0       	rjmp	.+26     	; 0x72a <vfprintf+0x2d4>
 710:	fe 01       	movw	r30, r28
 712:	ea 0d       	add	r30, r10
 714:	f1 1d       	adc	r31, r1
 716:	80 81       	ld	r24, Z
 718:	80 33       	cpi	r24, 0x30	; 48
 71a:	11 f4       	brne	.+4      	; 0x720 <vfprintf+0x2ca>
 71c:	39 7e       	andi	r19, 0xE9	; 233
 71e:	09 c0       	rjmp	.+18     	; 0x732 <vfprintf+0x2dc>
 720:	32 ff       	sbrs	r19, 2
 722:	06 c0       	rjmp	.+12     	; 0x730 <vfprintf+0x2da>
 724:	b3 94       	inc	r11
 726:	b3 94       	inc	r11
 728:	04 c0       	rjmp	.+8      	; 0x732 <vfprintf+0x2dc>
 72a:	83 2f       	mov	r24, r19
 72c:	86 78       	andi	r24, 0x86	; 134
 72e:	09 f0       	breq	.+2      	; 0x732 <vfprintf+0x2dc>
 730:	b3 94       	inc	r11
 732:	33 fd       	sbrc	r19, 3
 734:	13 c0       	rjmp	.+38     	; 0x75c <vfprintf+0x306>
 736:	30 ff       	sbrs	r19, 0
 738:	06 c0       	rjmp	.+12     	; 0x746 <vfprintf+0x2f0>
 73a:	5a 2c       	mov	r5, r10
 73c:	b3 14       	cp	r11, r3
 73e:	18 f4       	brcc	.+6      	; 0x746 <vfprintf+0x2f0>
 740:	53 0c       	add	r5, r3
 742:	5b 18       	sub	r5, r11
 744:	b3 2c       	mov	r11, r3
 746:	b3 14       	cp	r11, r3
 748:	68 f4       	brcc	.+26     	; 0x764 <vfprintf+0x30e>
 74a:	b7 01       	movw	r22, r14
 74c:	80 e2       	ldi	r24, 0x20	; 32
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	3c 87       	std	Y+12, r19	; 0x0c
 752:	0e 94 13 04 	call	0x826	; 0x826 <fputc>
 756:	b3 94       	inc	r11
 758:	3c 85       	ldd	r19, Y+12	; 0x0c
 75a:	f5 cf       	rjmp	.-22     	; 0x746 <vfprintf+0x2f0>
 75c:	b3 14       	cp	r11, r3
 75e:	10 f4       	brcc	.+4      	; 0x764 <vfprintf+0x30e>
 760:	3b 18       	sub	r3, r11
 762:	01 c0       	rjmp	.+2      	; 0x766 <vfprintf+0x310>
 764:	31 2c       	mov	r3, r1
 766:	34 ff       	sbrs	r19, 4
 768:	12 c0       	rjmp	.+36     	; 0x78e <vfprintf+0x338>
 76a:	b7 01       	movw	r22, r14
 76c:	80 e3       	ldi	r24, 0x30	; 48
 76e:	90 e0       	ldi	r25, 0x00	; 0
 770:	3c 87       	std	Y+12, r19	; 0x0c
 772:	0e 94 13 04 	call	0x826	; 0x826 <fputc>
 776:	3c 85       	ldd	r19, Y+12	; 0x0c
 778:	32 ff       	sbrs	r19, 2
 77a:	17 c0       	rjmp	.+46     	; 0x7aa <vfprintf+0x354>
 77c:	31 fd       	sbrc	r19, 1
 77e:	03 c0       	rjmp	.+6      	; 0x786 <vfprintf+0x330>
 780:	88 e7       	ldi	r24, 0x78	; 120
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	02 c0       	rjmp	.+4      	; 0x78a <vfprintf+0x334>
 786:	88 e5       	ldi	r24, 0x58	; 88
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	b7 01       	movw	r22, r14
 78c:	0c c0       	rjmp	.+24     	; 0x7a6 <vfprintf+0x350>
 78e:	83 2f       	mov	r24, r19
 790:	86 78       	andi	r24, 0x86	; 134
 792:	59 f0       	breq	.+22     	; 0x7aa <vfprintf+0x354>
 794:	31 ff       	sbrs	r19, 1
 796:	02 c0       	rjmp	.+4      	; 0x79c <vfprintf+0x346>
 798:	8b e2       	ldi	r24, 0x2B	; 43
 79a:	01 c0       	rjmp	.+2      	; 0x79e <vfprintf+0x348>
 79c:	80 e2       	ldi	r24, 0x20	; 32
 79e:	37 fd       	sbrc	r19, 7
 7a0:	8d e2       	ldi	r24, 0x2D	; 45
 7a2:	b7 01       	movw	r22, r14
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	0e 94 13 04 	call	0x826	; 0x826 <fputc>
 7aa:	a5 14       	cp	r10, r5
 7ac:	38 f4       	brcc	.+14     	; 0x7bc <vfprintf+0x366>
 7ae:	b7 01       	movw	r22, r14
 7b0:	80 e3       	ldi	r24, 0x30	; 48
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	0e 94 13 04 	call	0x826	; 0x826 <fputc>
 7b8:	5a 94       	dec	r5
 7ba:	f7 cf       	rjmp	.-18     	; 0x7aa <vfprintf+0x354>
 7bc:	aa 94       	dec	r10
 7be:	f4 01       	movw	r30, r8
 7c0:	ea 0d       	add	r30, r10
 7c2:	f1 1d       	adc	r31, r1
 7c4:	80 81       	ld	r24, Z
 7c6:	b7 01       	movw	r22, r14
 7c8:	90 e0       	ldi	r25, 0x00	; 0
 7ca:	0e 94 13 04 	call	0x826	; 0x826 <fputc>
 7ce:	a1 10       	cpse	r10, r1
 7d0:	f5 cf       	rjmp	.-22     	; 0x7bc <vfprintf+0x366>
 7d2:	33 20       	and	r3, r3
 7d4:	09 f4       	brne	.+2      	; 0x7d8 <vfprintf+0x382>
 7d6:	51 ce       	rjmp	.-862    	; 0x47a <vfprintf+0x24>
 7d8:	b7 01       	movw	r22, r14
 7da:	80 e2       	ldi	r24, 0x20	; 32
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	0e 94 13 04 	call	0x826	; 0x826 <fputc>
 7e2:	3a 94       	dec	r3
 7e4:	f6 cf       	rjmp	.-20     	; 0x7d2 <vfprintf+0x37c>
 7e6:	f7 01       	movw	r30, r14
 7e8:	86 81       	ldd	r24, Z+6	; 0x06
 7ea:	97 81       	ldd	r25, Z+7	; 0x07
 7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <vfprintf+0x39c>
 7ee:	8f ef       	ldi	r24, 0xFF	; 255
 7f0:	9f ef       	ldi	r25, 0xFF	; 255
 7f2:	2c 96       	adiw	r28, 0x0c	; 12
 7f4:	e2 e1       	ldi	r30, 0x12	; 18
 7f6:	0c 94 c5 04 	jmp	0x98a	; 0x98a <__epilogue_restores__>

000007fa <strnlen_P>:
 7fa:	fc 01       	movw	r30, r24
 7fc:	05 90       	lpm	r0, Z+
 7fe:	61 50       	subi	r22, 0x01	; 1
 800:	70 40       	sbci	r23, 0x00	; 0
 802:	01 10       	cpse	r0, r1
 804:	d8 f7       	brcc	.-10     	; 0x7fc <strnlen_P+0x2>
 806:	80 95       	com	r24
 808:	90 95       	com	r25
 80a:	8e 0f       	add	r24, r30
 80c:	9f 1f       	adc	r25, r31
 80e:	08 95       	ret

00000810 <strnlen>:
 810:	fc 01       	movw	r30, r24
 812:	61 50       	subi	r22, 0x01	; 1
 814:	70 40       	sbci	r23, 0x00	; 0
 816:	01 90       	ld	r0, Z+
 818:	01 10       	cpse	r0, r1
 81a:	d8 f7       	brcc	.-10     	; 0x812 <strnlen+0x2>
 81c:	80 95       	com	r24
 81e:	90 95       	com	r25
 820:	8e 0f       	add	r24, r30
 822:	9f 1f       	adc	r25, r31
 824:	08 95       	ret

00000826 <fputc>:
 826:	0f 93       	push	r16
 828:	1f 93       	push	r17
 82a:	cf 93       	push	r28
 82c:	df 93       	push	r29
 82e:	fb 01       	movw	r30, r22
 830:	23 81       	ldd	r18, Z+3	; 0x03
 832:	21 fd       	sbrc	r18, 1
 834:	03 c0       	rjmp	.+6      	; 0x83c <fputc+0x16>
 836:	8f ef       	ldi	r24, 0xFF	; 255
 838:	9f ef       	ldi	r25, 0xFF	; 255
 83a:	28 c0       	rjmp	.+80     	; 0x88c <fputc+0x66>
 83c:	22 ff       	sbrs	r18, 2
 83e:	16 c0       	rjmp	.+44     	; 0x86c <fputc+0x46>
 840:	46 81       	ldd	r20, Z+6	; 0x06
 842:	57 81       	ldd	r21, Z+7	; 0x07
 844:	24 81       	ldd	r18, Z+4	; 0x04
 846:	35 81       	ldd	r19, Z+5	; 0x05
 848:	42 17       	cp	r20, r18
 84a:	53 07       	cpc	r21, r19
 84c:	44 f4       	brge	.+16     	; 0x85e <fputc+0x38>
 84e:	a0 81       	ld	r26, Z
 850:	b1 81       	ldd	r27, Z+1	; 0x01
 852:	9d 01       	movw	r18, r26
 854:	2f 5f       	subi	r18, 0xFF	; 255
 856:	3f 4f       	sbci	r19, 0xFF	; 255
 858:	31 83       	std	Z+1, r19	; 0x01
 85a:	20 83       	st	Z, r18
 85c:	8c 93       	st	X, r24
 85e:	26 81       	ldd	r18, Z+6	; 0x06
 860:	37 81       	ldd	r19, Z+7	; 0x07
 862:	2f 5f       	subi	r18, 0xFF	; 255
 864:	3f 4f       	sbci	r19, 0xFF	; 255
 866:	37 83       	std	Z+7, r19	; 0x07
 868:	26 83       	std	Z+6, r18	; 0x06
 86a:	10 c0       	rjmp	.+32     	; 0x88c <fputc+0x66>
 86c:	eb 01       	movw	r28, r22
 86e:	09 2f       	mov	r16, r25
 870:	18 2f       	mov	r17, r24
 872:	00 84       	ldd	r0, Z+8	; 0x08
 874:	f1 85       	ldd	r31, Z+9	; 0x09
 876:	e0 2d       	mov	r30, r0
 878:	09 95       	icall
 87a:	89 2b       	or	r24, r25
 87c:	e1 f6       	brne	.-72     	; 0x836 <fputc+0x10>
 87e:	8e 81       	ldd	r24, Y+6	; 0x06
 880:	9f 81       	ldd	r25, Y+7	; 0x07
 882:	01 96       	adiw	r24, 0x01	; 1
 884:	9f 83       	std	Y+7, r25	; 0x07
 886:	8e 83       	std	Y+6, r24	; 0x06
 888:	81 2f       	mov	r24, r17
 88a:	90 2f       	mov	r25, r16
 88c:	df 91       	pop	r29
 88e:	cf 91       	pop	r28
 890:	1f 91       	pop	r17
 892:	0f 91       	pop	r16
 894:	08 95       	ret

00000896 <__ultoa_invert>:
 896:	fa 01       	movw	r30, r20
 898:	aa 27       	eor	r26, r26
 89a:	28 30       	cpi	r18, 0x08	; 8
 89c:	51 f1       	breq	.+84     	; 0x8f2 <__ultoa_invert+0x5c>
 89e:	20 31       	cpi	r18, 0x10	; 16
 8a0:	81 f1       	breq	.+96     	; 0x902 <__stack+0x3>
 8a2:	e8 94       	clt
 8a4:	6f 93       	push	r22
 8a6:	6e 7f       	andi	r22, 0xFE	; 254
 8a8:	6e 5f       	subi	r22, 0xFE	; 254
 8aa:	7f 4f       	sbci	r23, 0xFF	; 255
 8ac:	8f 4f       	sbci	r24, 0xFF	; 255
 8ae:	9f 4f       	sbci	r25, 0xFF	; 255
 8b0:	af 4f       	sbci	r26, 0xFF	; 255
 8b2:	b1 e0       	ldi	r27, 0x01	; 1
 8b4:	3e d0       	rcall	.+124    	; 0x932 <__stack+0x33>
 8b6:	b4 e0       	ldi	r27, 0x04	; 4
 8b8:	3c d0       	rcall	.+120    	; 0x932 <__stack+0x33>
 8ba:	67 0f       	add	r22, r23
 8bc:	78 1f       	adc	r23, r24
 8be:	89 1f       	adc	r24, r25
 8c0:	9a 1f       	adc	r25, r26
 8c2:	a1 1d       	adc	r26, r1
 8c4:	68 0f       	add	r22, r24
 8c6:	79 1f       	adc	r23, r25
 8c8:	8a 1f       	adc	r24, r26
 8ca:	91 1d       	adc	r25, r1
 8cc:	a1 1d       	adc	r26, r1
 8ce:	6a 0f       	add	r22, r26
 8d0:	71 1d       	adc	r23, r1
 8d2:	81 1d       	adc	r24, r1
 8d4:	91 1d       	adc	r25, r1
 8d6:	a1 1d       	adc	r26, r1
 8d8:	20 d0       	rcall	.+64     	; 0x91a <__stack+0x1b>
 8da:	09 f4       	brne	.+2      	; 0x8de <__ultoa_invert+0x48>
 8dc:	68 94       	set
 8de:	3f 91       	pop	r19
 8e0:	2a e0       	ldi	r18, 0x0A	; 10
 8e2:	26 9f       	mul	r18, r22
 8e4:	11 24       	eor	r1, r1
 8e6:	30 19       	sub	r19, r0
 8e8:	30 5d       	subi	r19, 0xD0	; 208
 8ea:	31 93       	st	Z+, r19
 8ec:	de f6       	brtc	.-74     	; 0x8a4 <__ultoa_invert+0xe>
 8ee:	cf 01       	movw	r24, r30
 8f0:	08 95       	ret
 8f2:	46 2f       	mov	r20, r22
 8f4:	47 70       	andi	r20, 0x07	; 7
 8f6:	40 5d       	subi	r20, 0xD0	; 208
 8f8:	41 93       	st	Z+, r20
 8fa:	b3 e0       	ldi	r27, 0x03	; 3
 8fc:	0f d0       	rcall	.+30     	; 0x91c <__stack+0x1d>
 8fe:	c9 f7       	brne	.-14     	; 0x8f2 <__ultoa_invert+0x5c>
 900:	f6 cf       	rjmp	.-20     	; 0x8ee <__ultoa_invert+0x58>
 902:	46 2f       	mov	r20, r22
 904:	4f 70       	andi	r20, 0x0F	; 15
 906:	40 5d       	subi	r20, 0xD0	; 208
 908:	4a 33       	cpi	r20, 0x3A	; 58
 90a:	18 f0       	brcs	.+6      	; 0x912 <__stack+0x13>
 90c:	49 5d       	subi	r20, 0xD9	; 217
 90e:	31 fd       	sbrc	r19, 1
 910:	40 52       	subi	r20, 0x20	; 32
 912:	41 93       	st	Z+, r20
 914:	02 d0       	rcall	.+4      	; 0x91a <__stack+0x1b>
 916:	a9 f7       	brne	.-22     	; 0x902 <__stack+0x3>
 918:	ea cf       	rjmp	.-44     	; 0x8ee <__ultoa_invert+0x58>
 91a:	b4 e0       	ldi	r27, 0x04	; 4
 91c:	a6 95       	lsr	r26
 91e:	97 95       	ror	r25
 920:	87 95       	ror	r24
 922:	77 95       	ror	r23
 924:	67 95       	ror	r22
 926:	ba 95       	dec	r27
 928:	c9 f7       	brne	.-14     	; 0x91c <__stack+0x1d>
 92a:	00 97       	sbiw	r24, 0x00	; 0
 92c:	61 05       	cpc	r22, r1
 92e:	71 05       	cpc	r23, r1
 930:	08 95       	ret
 932:	9b 01       	movw	r18, r22
 934:	ac 01       	movw	r20, r24
 936:	0a 2e       	mov	r0, r26
 938:	06 94       	lsr	r0
 93a:	57 95       	ror	r21
 93c:	47 95       	ror	r20
 93e:	37 95       	ror	r19
 940:	27 95       	ror	r18
 942:	ba 95       	dec	r27
 944:	c9 f7       	brne	.-14     	; 0x938 <__stack+0x39>
 946:	62 0f       	add	r22, r18
 948:	73 1f       	adc	r23, r19
 94a:	84 1f       	adc	r24, r20
 94c:	95 1f       	adc	r25, r21
 94e:	a0 1d       	adc	r26, r0
 950:	08 95       	ret

00000952 <__prologue_saves__>:
 952:	2f 92       	push	r2
 954:	3f 92       	push	r3
 956:	4f 92       	push	r4
 958:	5f 92       	push	r5
 95a:	6f 92       	push	r6
 95c:	7f 92       	push	r7
 95e:	8f 92       	push	r8
 960:	9f 92       	push	r9
 962:	af 92       	push	r10
 964:	bf 92       	push	r11
 966:	cf 92       	push	r12
 968:	df 92       	push	r13
 96a:	ef 92       	push	r14
 96c:	ff 92       	push	r15
 96e:	0f 93       	push	r16
 970:	1f 93       	push	r17
 972:	cf 93       	push	r28
 974:	df 93       	push	r29
 976:	cd b7       	in	r28, 0x3d	; 61
 978:	de b7       	in	r29, 0x3e	; 62
 97a:	ca 1b       	sub	r28, r26
 97c:	db 0b       	sbc	r29, r27
 97e:	0f b6       	in	r0, 0x3f	; 63
 980:	f8 94       	cli
 982:	de bf       	out	0x3e, r29	; 62
 984:	0f be       	out	0x3f, r0	; 63
 986:	cd bf       	out	0x3d, r28	; 61
 988:	09 94       	ijmp

0000098a <__epilogue_restores__>:
 98a:	2a 88       	ldd	r2, Y+18	; 0x12
 98c:	39 88       	ldd	r3, Y+17	; 0x11
 98e:	48 88       	ldd	r4, Y+16	; 0x10
 990:	5f 84       	ldd	r5, Y+15	; 0x0f
 992:	6e 84       	ldd	r6, Y+14	; 0x0e
 994:	7d 84       	ldd	r7, Y+13	; 0x0d
 996:	8c 84       	ldd	r8, Y+12	; 0x0c
 998:	9b 84       	ldd	r9, Y+11	; 0x0b
 99a:	aa 84       	ldd	r10, Y+10	; 0x0a
 99c:	b9 84       	ldd	r11, Y+9	; 0x09
 99e:	c8 84       	ldd	r12, Y+8	; 0x08
 9a0:	df 80       	ldd	r13, Y+7	; 0x07
 9a2:	ee 80       	ldd	r14, Y+6	; 0x06
 9a4:	fd 80       	ldd	r15, Y+5	; 0x05
 9a6:	0c 81       	ldd	r16, Y+4	; 0x04
 9a8:	1b 81       	ldd	r17, Y+3	; 0x03
 9aa:	aa 81       	ldd	r26, Y+2	; 0x02
 9ac:	b9 81       	ldd	r27, Y+1	; 0x01
 9ae:	ce 0f       	add	r28, r30
 9b0:	d1 1d       	adc	r29, r1
 9b2:	0f b6       	in	r0, 0x3f	; 63
 9b4:	f8 94       	cli
 9b6:	de bf       	out	0x3e, r29	; 62
 9b8:	0f be       	out	0x3f, r0	; 63
 9ba:	cd bf       	out	0x3d, r28	; 61
 9bc:	ed 01       	movw	r28, r26
 9be:	08 95       	ret

000009c0 <_exit>:
 9c0:	f8 94       	cli

000009c2 <__stop_program>:
 9c2:	ff cf       	rjmp	.-2      	; 0x9c2 <__stop_program>
